{"ast":null,"code":"import { relToNode } from '../utils';\n\nvar createRel = function createRel(id) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'blood';\n  return {\n    id: id,\n    type: type\n  };\n};\n\nvar createNode = function createNode(gender) {\n  return {\n    id: \"\".concat(gender, \"-placeholder\"),\n    placeholder: true,\n    gender: gender,\n    parents: [],\n    siblings: [],\n    spouses: [],\n    children: []\n  };\n};\n\nvar createParents = function createParents(store, root) {\n  var father = createNode('male');\n  var mother = createNode('female');\n  father.spouses = [createRel(mother.id, 'married')];\n  mother.spouses = [createRel(father.id, 'married')];\n  return [father, mother].map(function (node) {\n    node.children = root.siblings.concat(createRel(root.id));\n    store.nodes.set(node.id, node);\n    return createRel(node.id);\n  });\n};\n\nvar setParents = function setParents(parents) {\n  return function (node) {\n    return node.parents = parents.slice();\n  };\n};\n\nexport default (function (store) {\n  if (store.rootNode.parents.length) return store;\n  var root = store.rootNode;\n  var setParentsTo = setParents(createParents(store, root));\n  setParentsTo(root);\n  root.siblings.map(relToNode(store)).forEach(setParentsTo);\n  return store;\n});","map":{"version":3,"sources":["../../src/middle/placeholders.ts"],"names":[],"mappings":"AAEA,SAAS,SAAT,QAA0B,UAA1B;;AAEA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,EAAD;AAAA,MAAa,IAAb,uEAAkC,OAAlC;AAAA,SAA0D;AAAE,IAAA,EAAE,EAAF,EAAF;AAAM,IAAA,IAAI,EAAJ;AAAN,GAA1D;AAAA,CAAlB;;AAEA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,MAAD;AAAA,SAAkC;AACnD,IAAA,EAAE,YAAK,MAAL,iBADiD;AAEnD,IAAA,WAAW,EAAE,IAFsC;AAGnD,IAAA,MAAM,EAAE,MAH2C;AAInD,IAAA,OAAO,EAAE,EAJ0C;AAKnD,IAAA,QAAQ,EAAE,EALyC;AAMnD,IAAA,OAAO,EAAE,EAN0C;AAOnD,IAAA,QAAQ,EAAE;AAPyC,GAAlC;AAAA,CAAnB;;AAUA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,KAAD,EAAe,IAAf,EAAiD;AACrE,MAAM,MAAM,GAAG,UAAU,CAAC,MAAD,CAAzB;AACA,MAAM,MAAM,GAAG,UAAU,CAAC,QAAD,CAAzB;AAEA,EAAA,MAAM,CAAC,OAAP,GAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAR,EAAY,SAAZ,CAAV,CAAjB;AACA,EAAA,MAAM,CAAC,OAAP,GAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,EAAR,EAAY,SAAZ,CAAV,CAAjB;AAEA,SAAO,CAAC,MAAD,EAAS,MAAT,EAAiB,GAAjB,CAAqB,UAAA,IAAI,EAAG;AACjC,IAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,QAAL,CAAc,MAAd,CAAqB,SAAS,CAAC,IAAI,CAAC,EAAN,CAA9B,CAAhB;AACA,IAAA,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAgB,IAAI,CAAC,EAArB,EAAyB,IAAzB;AAEA,WAAO,SAAS,CAAC,IAAI,CAAC,EAAN,CAAhB;AACD,GALM,CAAP;AAMD,CAbD;;AAeA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,OAAD;AAAA,SAA0B,UAAC,IAAD;AAAA,WAAuB,IAAI,CAAC,OAAL,GAAe,OAAO,CAAC,KAAR,EAAtC;AAAA,GAA1B;AAAA,CAAnB;;AAEA,gBAAe,UAAC,KAAD,EAAwB;AACrC,MAAI,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,MAA3B,EAAmC,OAAO,KAAP;AACnC,MAAM,IAAI,GAAG,KAAK,CAAC,QAAnB;AACA,MAAM,YAAY,GAAG,UAAU,CAAC,aAAa,CAAC,KAAD,EAAQ,IAAR,CAAd,CAA/B;AAEA,EAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,EAAA,IAAI,CAAC,QAAL,CACG,GADH,CACO,SAAS,CAAC,KAAD,CADhB,EAEG,OAFH,CAEW,YAFX;AAIA,SAAO,KAAP;AACD,CAZD","sourceRoot":"","sourcesContent":["import { relToNode } from '../utils';\nconst createRel = (id, type = 'blood') => ({ id, type });\nconst createNode = (gender) => ({\n    id: `${gender}-placeholder`,\n    placeholder: true,\n    gender: gender,\n    parents: [],\n    siblings: [],\n    spouses: [],\n    children: [],\n});\nconst createParents = (store, root) => {\n    const father = createNode('male');\n    const mother = createNode('female');\n    father.spouses = [createRel(mother.id, 'married')];\n    mother.spouses = [createRel(father.id, 'married')];\n    return [father, mother].map(node => {\n        node.children = root.siblings.concat(createRel(root.id));\n        store.nodes.set(node.id, node);\n        return createRel(node.id);\n    });\n};\nconst setParents = (parents) => (node) => node.parents = parents.slice();\nexport default (store) => {\n    if (store.rootNode.parents.length)\n        return store;\n    const root = store.rootNode;\n    const setParentsTo = setParents(createParents(store, root));\n    setParentsTo(root);\n    root.siblings\n        .map(relToNode(store))\n        .forEach(setParentsTo);\n    return store;\n};\n//# sourceMappingURL=placeholders.js.map"]},"metadata":{},"sourceType":"module"}