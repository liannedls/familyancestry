{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\src\\\\frontend\\\\Tree.tsx\";\nimport React, { useState, useCallback } from 'react';\nimport PinchZoomPan from 'pinch-zoom-pan';\nimport ReactFamilyTree from 'react-family-tree';\nimport FamilyNode from '../FamilyNode/FamilyNode';\nimport styles from './App.module.css';\nimport nodes from '../../sample.json';\nconst myID = 'kuVISwh7w';\nconst WIDTH = 70;\nconst HEIGHT = 80;\nexport default React.memo(function App() {\n  const [rootId, setRootId] = useState(myID);\n  const onResetClick = useCallback(() => setRootId(myID), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"FamilyTree demo\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/SanichKotikov/react-family-tree-example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"GitHub\")), /*#__PURE__*/React.createElement(PinchZoomPan, {\n    debug: true,\n    captureWheel: true,\n    min: 0.5,\n    max: 2.5,\n    className: styles.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactFamilyTree, {\n    nodes: nodes,\n    rootId: rootId,\n    width: WIDTH,\n    height: HEIGHT,\n    canvasClassName: styles.tree,\n    renderNode: node => /*#__PURE__*/React.createElement(FamilyNode, {\n      key: node.id,\n      node: node,\n      isRoot: node.id === rootId,\n      onSubClick: setRootId,\n      style: {\n        width: WIDTH,\n        height: HEIGHT,\n        transform: `translate(${node.left * (WIDTH / 2)}px, ${node.top * (HEIGHT / 2)}px)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), rootId !== myID && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.reset,\n    onClick: onResetClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Reset\"));\n});","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/src/frontend/Tree.tsx"],"names":["React","useState","useCallback","PinchZoomPan","ReactFamilyTree","FamilyNode","styles","nodes","myID","WIDTH","HEIGHT","memo","App","rootId","setRootId","onResetClick","root","header","title","wrapper","tree","node","id","width","height","transform","left","top","reset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,MAAMC,IAAI,GAAG,WAAb;AAEA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,MAAM,GAAG,EAAf;AAEA,eAAeV,KAAK,CAACW,IAAN,CACb,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAASO,IAAT,CAApC;AACA,QAAMO,YAAY,GAAGb,WAAW,CAAC,MAAMY,SAAS,CAACN,IAAD,CAAhB,EAAwB,EAAxB,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACU,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAEV,MAAM,CAACW,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEX,MAAM,CAACY,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE;AAAG,IAAA,IAAI,EAAC,4DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,eAOE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,YAAY,MAFd;AAGE,IAAA,GAAG,EAAE,GAHP;AAIE,IAAA,GAAG,EAAE,GAJP;AAKE,IAAA,SAAS,EAAEZ,MAAM,CAACa,OALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAEZ,KADT;AAEE,IAAA,MAAM,EAAEM,MAFV;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,eAAe,EAAEJ,MAAM,CAACc,IAL1B;AAME,IAAA,UAAU,EAAGC,IAAD,iBACV,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,MAAM,EAAEA,IAAI,CAACC,EAAL,KAAYT,MAHtB;AAIE,MAAA,UAAU,EAAEC,SAJd;AAKE,MAAA,KAAK,EAAE;AACLS,QAAAA,KAAK,EAAEd,KADF;AAELe,QAAAA,MAAM,EAAEd,MAFH;AAGLe,QAAAA,SAAS,EAAG,aAAYJ,IAAI,CAACK,IAAL,IAAajB,KAAK,GAAG,CAArB,CAAwB,OAAMY,IAAI,CAACM,GAAL,IAAYjB,MAAM,GAAG,CAArB,CAAwB;AAHzE,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAPF,EAmCGG,MAAM,KAAKL,IAAX,iBACC;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACsB,KAAvB;AAA8B,IAAA,OAAO,EAAEb,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApCJ,CADF;AA2CD,CAhDY,CAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport PinchZoomPan from 'pinch-zoom-pan';\r\nimport { IFamilyNode, IFamilyExtNode } from 'relatives-tree';\r\nimport ReactFamilyTree from 'react-family-tree';\r\nimport FamilyNode from '../FamilyNode/FamilyNode';\r\nimport styles from './App.module.css';\r\n\r\nimport nodes from '../../sample.json';\r\nconst myID = 'kuVISwh7w';\r\n\r\nconst WIDTH = 70;\r\nconst HEIGHT = 80;\r\n\r\nexport default React.memo<{}>(\r\n  function App() {\r\n    const [rootId, setRootId] = useState<string>(myID);\r\n    const onResetClick = useCallback(() => setRootId(myID), []);\r\n\r\n    return (\r\n      <div className={styles.root}>\r\n        <header className={styles.header}>\r\n          <h1 className={styles.title}>\r\n            FamilyTree demo\r\n          </h1>\r\n          <a href=\"https://github.com/SanichKotikov/react-family-tree-example\">GitHub</a>\r\n        </header>\r\n        <PinchZoomPan\r\n          debug\r\n          captureWheel\r\n          min={0.5}\r\n          max={2.5}\r\n          className={styles.wrapper}\r\n        >\r\n          <ReactFamilyTree\r\n            nodes={nodes as IFamilyNode[]}\r\n            rootId={rootId}\r\n            width={WIDTH}\r\n            height={HEIGHT}\r\n            canvasClassName={styles.tree}\r\n            renderNode={(node: IFamilyExtNode) => (\r\n              <FamilyNode\r\n                key={node.id}\r\n                node={node}\r\n                isRoot={node.id === rootId}\r\n                onSubClick={setRootId}\r\n                style={{\r\n                  width: WIDTH,\r\n                  height: HEIGHT,\r\n                  transform: `translate(${node.left * (WIDTH / 2)}px, ${node.top * (HEIGHT / 2)}px)`,\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </PinchZoomPan>\r\n        {rootId !== myID && (\r\n          <div className={styles.reset} onClick={onResetClick}>\r\n            Reset\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}