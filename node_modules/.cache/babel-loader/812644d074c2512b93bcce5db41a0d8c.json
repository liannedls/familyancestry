{"ast":null,"code":"import { prop, withType, relToNode } from './index';\nexport default ((store, parents) => {\n  const middle = [...parents];\n\n  if (middle.length === 1) {\n    let spouse;\n    const parent = middle[0];\n    const married = parent.spouses.find(withType('married'));\n\n    if (married) {\n      spouse = store.getNode(married.id);\n    } else if (parent.spouses.length === 1) {\n      spouse = store.getNode(parent.spouses[0].id);\n    } else if (parent.spouses.length > 1) {\n      spouse = parent.spouses.map(relToNode(store)).sort((a, b) => b.children.length - a.children.length)[0];\n    }\n\n    if (spouse) {\n      parent.gender === store.gender ? middle.push(spouse) : middle.unshift(spouse);\n    }\n  }\n\n  const result = {\n    left: [],\n    middle,\n    right: []\n  };\n\n  if (middle.length === 2) {\n    const middleIds = result.middle.map(prop('id'));\n    result.left = middle[0].spouses.filter(rel => middleIds.indexOf(rel.id) === -1).sort(a => a.type === 'married' ? 1 : 0).map(relToNode(store));\n    result.right = middle[1].spouses.filter(rel => middleIds.indexOf(rel.id) === -1).sort(a => a.type === 'married' ? -1 : 0).map(relToNode(store));\n  }\n\n  return result;\n});","map":null,"metadata":{},"sourceType":"module"}