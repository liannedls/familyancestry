{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport Family from '../models/family';\nimport Unit from '../models/unit';\nimport { withId, relToNode } from '../utils';\nimport getSpouses from '../utils/getSpouses';\nimport setUnitDefShifts from '../utils/setUnitDefShifts';\nexport default (function (store) {\n  return function (parentIDs) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'root';\n    var isMain = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var family = new Family(store.getNextId(), type, isMain);\n    var parents = parentIDs.map(store.getNode.bind(store));\n    if (family.main) parents.sort(function (a, b) {\n      return b.gender !== store.gender ? -1 : 0;\n    });\n    family.pUnits.push(new Unit(family.id, parents));\n    var children = [];\n\n    if (parents.length === 1) {\n      children = parents[0].children.map(relToNode(store));\n    } else {\n      var firstParent = parents[0];\n      var secondParent = parents[1];\n      children = firstParent.children.filter(function (rel) {\n        return secondParent.children.find(withId(rel.id));\n      }).map(relToNode(store));\n    }\n\n    children.forEach(function (child) {\n      if (child.spouses.length) {\n        var _getSpouses = getSpouses(store, [child]),\n            left = _getSpouses.left,\n            middle = _getSpouses.middle,\n            right = _getSpouses.right;\n\n        [].concat(_toConsumableArray(left.map(function (node) {\n          return [node];\n        })), [middle], _toConsumableArray(right.map(function (node) {\n          return [node];\n        }))).forEach(function (nodes) {\n          return family.cUnits.push(new Unit(family.id, nodes, true));\n        });\n      } else {\n        family.cUnits.push(new Unit(family.id, [child], true));\n      }\n    });\n    setUnitDefShifts(family);\n    return family;\n  };\n});","map":{"version":3,"sources":["../../src/children/byParents.ts"],"names":[],"mappings":";AACA,OAAO,MAAP,MAAmB,kBAAnB;AACA,OAAO,IAAP,MAAiB,gBAAjB;AACA,SAAS,MAAT,EAAiB,SAAjB,QAAkC,UAAlC;AACA,OAAO,UAAP,MAAuB,qBAAvB;AACA,OAAO,gBAAP,MAA6B,2BAA7B;AAGA,gBAAe,UAAC,KAAD,EAAiB;AAC9B,SAAO,UAAU,SAAV,EAAiF;AAAA,QAAlD,IAAkD,uEAA/B,MAA+B;AAAA,QAAvB,MAAuB,uEAAL,KAAK;AACtF,QAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,KAAK,CAAC,SAAN,EAAX,EAA8B,IAA9B,EAAoC,MAApC,CAAf;AAEA,QAAM,OAAO,GAAG,SAAS,CAAC,GAAV,CAAc,KAAK,CAAC,OAAN,CAAc,IAAd,CAAmB,KAAnB,CAAd,CAAhB;AACA,QAAI,MAAM,CAAC,IAAX,EAAiB,OAAO,CAAC,IAAR,CAAa,UAAC,CAAD,EAAI,CAAJ;AAAA,aAAW,CAAC,CAAC,MAAF,KAAa,KAAK,CAAC,MAApB,GAA8B,CAAC,CAA/B,GAAmC,CAA7C;AAAA,KAAb;AAEjB,IAAA,MAAM,CAAC,MAAP,CAAc,IAAd,CAAmB,IAAI,IAAJ,CAAS,MAAM,CAAC,EAAhB,EAAoB,OAApB,CAAnB;AAGA,QAAI,QAAQ,GAAkB,EAA9B;;AAEA,QAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,MAAA,QAAQ,GAAG,OAAO,CAAC,CAAD,CAAP,CAAW,QAAX,CAAoB,GAApB,CAAwB,SAAS,CAAC,KAAD,CAAjC,CAAX;AACD,KAFD,MAEO;AACL,UAAM,WAAW,GAAG,OAAO,CAAC,CAAD,CAA3B;AACA,UAAM,YAAY,GAAG,OAAO,CAAC,CAAD,CAA5B;AAEA,MAAA,QAAQ,GAAG,WAAW,CAAC,QAAZ,CACR,MADQ,CACD,UAAA,GAAG;AAAA,eAAI,YAAY,CAAC,QAAb,CAAsB,IAAtB,CAA2B,MAAM,CAAC,GAAG,CAAC,EAAL,CAAjC,CAAJ;AAAA,OADF,EAER,GAFQ,CAEJ,SAAS,CAAC,KAAD,CAFL,CAAX;AAGD;;AAGD,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAA,KAAK,EAAG;AACvB,UAAI,KAAK,CAAC,OAAN,CAAc,MAAlB,EAA0B;AAAA,0BACQ,UAAU,CAAC,KAAD,EAAQ,CAAC,KAAD,CAAR,CADlB;AAAA,YAChB,IADgB,eAChB,IADgB;AAAA,YACV,MADU,eACV,MADU;AAAA,YACF,KADE,eACF,KADE;;AAExB,qCAAI,IAAI,CAAC,GAAL,CAAS,UAAA,IAAI;AAAA,iBAAI,CAAC,IAAD,CAAJ;AAAA,SAAb,CAAJ,IAA8B,MAA9B,sBAAyC,KAAK,CAAC,GAAN,CAAU,UAAA,IAAI;AAAA,iBAAI,CAAC,IAAD,CAAJ;AAAA,SAAd,CAAzC,GAAoE,OAApE,CAA4E,UAAA,KAAK;AAAA,iBAC/E,MAAM,CAAC,MAAP,CAAc,IAAd,CAAmB,IAAI,IAAJ,CAAS,MAAM,CAAC,EAAhB,EAAoB,KAApB,EAA2B,IAA3B,CAAnB,CAD+E;AAAA,SAAjF;AAGD,OALD,MAKO;AACL,QAAA,MAAM,CAAC,MAAP,CAAc,IAAd,CAAmB,IAAI,IAAJ,CAAS,MAAM,CAAC,EAAhB,EAAoB,CAAC,KAAD,CAApB,EAA6B,IAA7B,CAAnB;AACD;AACF,KATD;AAWA,IAAA,gBAAgB,CAAC,MAAD,CAAhB;AACA,WAAO,MAAP;AACD,GApCD;AAqCD,CAtCD","sourceRoot":"","sourcesContent":["import Family from '../models/family';\nimport Unit from '../models/unit';\nimport { withId, relToNode } from '../utils';\nimport getSpouses from '../utils/getSpouses';\nimport setUnitDefShifts from '../utils/setUnitDefShifts';\nexport default (store) => {\n    return function (parentIDs, type = 'root', isMain = false) {\n        const family = new Family(store.getNextId(), type, isMain);\n        const parents = parentIDs.map(store.getNode.bind(store));\n        if (family.main)\n            parents.sort((a, b) => (b.gender !== store.gender) ? -1 : 0);\n        family.pUnits.push(new Unit(family.id, parents));\n        let children = [];\n        if (parents.length === 1) {\n            children = parents[0].children.map(relToNode(store));\n        }\n        else {\n            const firstParent = parents[0];\n            const secondParent = parents[1];\n            children = firstParent.children\n                .filter(rel => secondParent.children.find(withId(rel.id)))\n                .map(relToNode(store));\n        }\n        children.forEach(child => {\n            if (child.spouses.length) {\n                const { left, middle, right } = getSpouses(store, [child]);\n                [...left.map(node => [node]), middle, ...right.map(node => [node])].forEach(nodes => (family.cUnits.push(new Unit(family.id, nodes, true))));\n            }\n            else {\n                family.cUnits.push(new Unit(family.id, [child], true));\n            }\n        });\n        setUnitDefShifts(family);\n        return family;\n    };\n};\n//# sourceMappingURL=byParents.js.map"]},"metadata":{},"sourceType":"module"}