{"ast":null,"code":"import { withId } from './index';\n\nvar inUnits = function inUnits(units, nodeId) {\n  return !!units.find(function (unit) {\n    return !!unit.nodes.find(withId(nodeId));\n  });\n};\n\nexport default (function (family, node) {\n  if (family.type !== 'child' && inUnits(family.pUnits, node.id)) {\n    return !node.parents.length && !!node.siblings.length || family.type === 'parent' && node.children.length > 1;\n  }\n\n  if (family.type !== 'parent' && inUnits(family.cUnits, node.id)) {\n    var parentIds = family.pUnits[0].ids;\n    var sameParents = !!node.parents.filter(function (rel) {\n      return parentIds.indexOf(rel.id) !== -1;\n    }).length;\n    return !sameParents && (!!node.parents.length || !!node.siblings.length);\n  }\n\n  return false;\n});","map":{"version":3,"sources":["../../src/utils/hasHiddenRelatives.ts"],"names":[],"mappings":"AAEA,SAAS,MAAT,QAAuB,SAAvB;;AAGA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,KAAD,EAAgB,MAAhB;AAAA,SACd,CAAC,CAAC,KAAK,CAAC,IAAN,CAAW,UAAA,IAAI;AAAA,WACf,CAAC,CAAC,IAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,MAAM,CAAC,MAAD,CAAtB,CADa;AAAA,GAAf,CADY;AAAA,CAAhB;;AAMA,gBAAe,UAAC,MAAD,EAAiB,IAAjB,EAA+C;AAE5D,MAAI,MAAM,CAAC,IAAP,KAAgB,OAAhB,IAA2B,OAAO,CAAC,MAAM,CAAC,MAAR,EAAgB,IAAI,CAAC,EAArB,CAAtC,EAAgE;AAC9D,WACG,CAAC,IAAI,CAAC,OAAL,CAAa,MAAd,IAAwB,CAAC,CAAC,IAAI,CAAC,QAAL,CAAc,MAAzC,IACC,MAAM,CAAC,IAAP,KAAgB,QAAhB,IAA4B,IAAI,CAAC,QAAL,CAAc,MAAd,GAAuB,CAFtD;AAID;;AAED,MAAI,MAAM,CAAC,IAAP,KAAgB,QAAhB,IAA4B,OAAO,CAAC,MAAM,CAAC,MAAR,EAAgB,IAAI,CAAC,EAArB,CAAvC,EAAiE;AAC/D,QAAM,SAAS,GAAG,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,GAAnC;AAGA,QAAM,WAAW,GAAY,CAAC,CAAC,IAAI,CAAC,OAAL,CAC5B,MAD4B,CACrB,UAAA,GAAG;AAAA,aAAI,SAAS,CAAC,OAAV,CAAkB,GAAG,CAAC,EAAtB,MAA8B,CAAC,CAAnC;AAAA,KADkB,EAE5B,MAFH;AAIA,WAAQ,CAAC,WAAD,KAAiB,CAAC,CAAC,IAAI,CAAC,OAAL,CAAa,MAAf,IAAyB,CAAC,CAAC,IAAI,CAAC,QAAL,CAAc,MAA1D,CAAR;AACD;;AAED,SAAO,KAAP;AACD,CArBD","sourceRoot":"","sourcesContent":["import { withId } from './index';\nconst inUnits = (units, nodeId) => (!!units.find(unit => (!!unit.nodes.find(withId(nodeId)))));\nexport default (family, node) => {\n    if (family.type !== 'child' && inUnits(family.pUnits, node.id)) {\n        return ((!node.parents.length && !!node.siblings.length) ||\n            (family.type === 'parent' && node.children.length > 1));\n    }\n    if (family.type !== 'parent' && inUnits(family.cUnits, node.id)) {\n        const parentIds = family.pUnits[0].ids;\n        const sameParents = !!node.parents\n            .filter(rel => parentIds.indexOf(rel.id) !== -1)\n            .length;\n        return (!sameParents && (!!node.parents.length || !!node.siblings.length));\n    }\n    return false;\n};\n//# sourceMappingURL=hasHiddenRelatives.js.map"]},"metadata":{},"sourceType":"module"}