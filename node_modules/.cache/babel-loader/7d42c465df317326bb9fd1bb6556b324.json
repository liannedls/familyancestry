{"ast":null,"code":"import Family from '../models/family';\nimport Unit from '../models/unit';\nimport { withId, relToNode } from '../utils';\nimport getSpouses from '../utils/getSpouses';\nimport setUnitDefShifts from '../utils/setUnitDefShifts';\nexport default (store => {\n  return function (parentIDs, type = 'root', isMain = false) {\n    const family = new Family(store.getNextId(), type, isMain);\n    const parents = parentIDs.map(store.getNode.bind(store));\n    if (family.main) parents.sort((a, b) => b.gender !== store.gender ? -1 : 0);\n    family.pUnits.push(new Unit(family.id, parents));\n    let children = [];\n\n    if (parents.length === 1) {\n      children = parents[0].children.map(relToNode(store));\n    } else {\n      const firstParent = parents[0];\n      const secondParent = parents[1];\n      children = firstParent.children.filter(rel => secondParent.children.find(withId(rel.id))).map(relToNode(store));\n    }\n\n    children.forEach(child => {\n      if (child.spouses.length) {\n        const _getSpouses = getSpouses(store, [child]),\n              left = _getSpouses.left,\n              middle = _getSpouses.middle,\n              right = _getSpouses.right;\n\n        [...left.map(node => [node]), middle, ...right.map(node => [node])].forEach(nodes => family.cUnits.push(new Unit(family.id, nodes, true)));\n      } else {\n        family.cUnits.push(new Unit(family.id, [child], true));\n      }\n    });\n    setUnitDefShifts(family);\n    return family;\n  };\n});","map":null,"metadata":{},"sourceType":"module"}