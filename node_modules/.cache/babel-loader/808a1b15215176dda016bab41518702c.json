{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\src\\\\frontend\\\\FamilyNode\\\\FamilyNode.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './FamilyNode.module.css';\nimport Modal from 'react-modal';\nimport Button from 'react-bootstrap/Button';\n\nfunction Iflink(link) {\n  if (link) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"See more\"));\n  }\n}\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '300px',\n    height: '250px',\n    background: \"#DCD2C8\"\n  }\n}; // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\nModal.setAppElement('*');\nexport default React.memo(function FamilyNode({\n  node,\n  isRoot,\n  onSubClick,\n  style,\n  namePerson\n}) {\n  var subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openModal,\n    className: classNames(styles.inner, styles[node.gender], isRoot && styles.isRoot),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, namePerson)), node.hasSubTree && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.sub, styles[node.gender]),\n    onClick: () => onSubClick(node.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupExit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"close\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, node.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"DOB\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, node.dob)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"DOD\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \" \", node.dod)), Iflink(node.link), /*#__PURE__*/React.createElement(\"img\", {\n    src: node.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }))));\n});","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/src/frontend/FamilyNode/FamilyNode.tsx"],"names":["React","classNames","styles","Modal","Button","Iflink","link","customStyles","content","top","left","right","bottom","marginRight","transform","width","height","background","setAppElement","memo","FamilyNode","node","isRoot","onSubClick","style","namePerson","subtitle","modalIsOpen","setIsOpen","useState","openModal","closeModal","root","inner","gender","person","hasSubTree","sub","id","popupExit","popupContent","name","dob","dod","src"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport classNames from 'classnames';\r\nimport { IFamilyExtNode } from 'relatives-tree';\r\nimport styles from './FamilyNode.module.css';\r\nimport Modal from 'react-modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\ninterface Props {\r\n  node: IFamilyExtNode;\r\n  isRoot: boolean;\r\n  onSubClick: (id: string) => void;\r\n  style?: React.CSSProperties;\r\n  namePerson: string;\r\n}\r\n\r\nfunction Iflink(link){\r\n  if (link){\r\n      return(\r\n        <div>\r\n\r\n        <a href={link}>See more</a>\r\n        </div>\r\n      )\r\n  }\r\n}\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)',\r\n    width:'300px',\r\n    height:'250px',\r\n    background:\"#DCD2C8\"\r\n  }\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('*')\r\n\r\nexport default React.memo<Props>(\r\n\r\n  function FamilyNode({ node, isRoot, onSubClick, style, namePerson }) {\r\n    var subtitle;\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n    function openModal() {\r\n      setIsOpen(true);\r\n    }\r\n\r\n    function closeModal(){\r\n      setIsOpen(false);\r\n    }\r\n    return (\r\n      <div className={styles.root} style={style}>\r\n            <button onClick={openModal}\r\n            className={classNames(\r\n              styles.inner,\r\n              styles[node.gender],\r\n              isRoot && styles.isRoot,\r\n            )}\r\n          >\r\n          <p className={styles.person}>\r\n          {namePerson}\r\n          </p>\r\n</button>\r\n\r\n\r\n        {node.hasSubTree && (\r\n          <div\r\n            className={classNames(styles.sub, styles[node.gender])}\r\n            onClick={() => onSubClick(node.id)}\r\n          />\r\n        )}\r\n\r\n\r\n\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n\r\n          <div className = {styles.popupExit}>\r\n          <Button onClick={closeModal}>close</Button>\r\n</div>\r\n              <div className = {styles.popupContent}>\r\n              <h1>\r\n              {node.name}\r\n              </h1>\r\n              <div>\r\n              DOB\r\n              <p>{node.dob}</p>\r\n              </div>\r\n              <div>\r\n              DOD\r\n              <p> {node.dod}</p>\r\n              </div>\r\n              {Iflink(node.link)}\r\n\r\n\r\n            <img src={node.src} />\r\n            </div>\r\n        </Modal>\r\n          </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}