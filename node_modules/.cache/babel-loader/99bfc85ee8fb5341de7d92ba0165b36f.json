{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactVisibilitySensor = _interopRequireDefault(require(\"react-visibility-sensor\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nclass VerticalTimelineElement extends _react.Component {\n  constructor(props) {\n    super(props);\n    this.onVisibilitySensorChange = this.onVisibilitySensorChange.bind(this);\n    this.state = {\n      visible: false\n    };\n  }\n\n  onVisibilitySensorChange(isVisible) {\n    if (isVisible) {\n      this.setState({\n        visible: true\n      });\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          children = _this$props.children,\n          contentArrowStyle = _this$props.contentArrowStyle,\n          contentStyle = _this$props.contentStyle,\n          icon = _this$props.icon,\n          iconStyle = _this$props.iconStyle,\n          iconOnClick = _this$props.iconOnClick,\n          date = _this$props.date,\n          position = _this$props.position,\n          style = _this$props.style,\n          className = _this$props.className,\n          visibilitySensorProps = _this$props.visibilitySensorProps;\n    const visible = this.state.visible;\n    return _react.default.createElement(\"div\", {\n      id: id,\n      className: (0, _classnames.default)(className, 'vertical-timeline-element', {\n        'vertical-timeline-element--left': position === 'left',\n        'vertical-timeline-element--right': position === 'right',\n        'vertical-timeline-element--no-children': children === ''\n      }),\n      style: style\n    }, _react.default.createElement(_reactVisibilitySensor.default, _extends({}, visibilitySensorProps, {\n      onChange: this.onVisibilitySensorChange\n    }), _react.default.createElement(\"div\", null, _react.default.createElement(\"span\", {\n      // eslint-disable-line jsx-a11y/no-static-element-interactions\n      style: iconStyle,\n      onClick: iconOnClick,\n      className: \"vertical-timeline-element-icon \".concat(visible ? 'bounce-in' : 'is-hidden')\n    }, icon), _react.default.createElement(\"div\", {\n      style: contentStyle,\n      className: \"vertical-timeline-element-content \".concat(visible ? 'bounce-in' : 'is-hidden')\n    }, _react.default.createElement(\"div\", {\n      style: contentArrowStyle,\n      className: \"vertical-timeline-element-content-arrow\"\n    }), children, _react.default.createElement(\"span\", {\n      className: \"vertical-timeline-element-date\"\n    }, date)))));\n  }\n\n}\n\nVerticalTimelineElement.propTypes = {\n  id: _propTypes.default.string,\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),\n  className: _propTypes.default.string,\n  contentArrowStyle: _propTypes.default.shape({}),\n  contentStyle: _propTypes.default.shape({}),\n  icon: _propTypes.default.element,\n  iconStyle: _propTypes.default.shape({}),\n  iconOnClick: _propTypes.default.func,\n  style: _propTypes.default.shape({}),\n  date: _propTypes.default.node,\n  position: _propTypes.default.string,\n  visibilitySensorProps: _propTypes.default.shape({})\n};\nVerticalTimelineElement.defaultProps = {\n  id: '',\n  children: '',\n  className: '',\n  contentArrowStyle: null,\n  contentStyle: null,\n  icon: null,\n  iconStyle: null,\n  style: null,\n  date: '',\n  position: '',\n  iconOnClick: null,\n  visibilitySensorProps: {\n    partialVisibility: true,\n    offset: {\n      bottom: 40\n    }\n  }\n};\nvar _default = VerticalTimelineElement;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}