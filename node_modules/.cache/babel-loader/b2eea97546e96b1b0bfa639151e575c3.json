{"ast":null,"code":"import { prop, withType, min } from './index';\nexport default (store => {\n  const families = store.familiesArray;\n  const vShift = min(families.map(prop('top'))) * -1;\n  if (vShift !== 0) families.forEach(family => family.top += vShift);\n  const rootChild = families.find(f => f.main);\n  const rootParent = families.find(f => f.cID === rootChild.id);\n\n  if (rootParent) {\n    const cUnit = rootChild.pUnits[0];\n    const pUnit = rootParent.cUnits[0];\n    const diff = rootParent.left + pUnit.shift - (rootChild.left + cUnit.shift);\n    if (diff > 0) families.filter(withType('child', 'root')).forEach(family => family.left += diff);else if (diff < 0) families.filter(withType('parent')).forEach(family => family.left += diff * -1);\n    const hShift = min(families.map(prop('left')));\n    if (hShift > 0) families.forEach(family => family.left -= hShift);\n  }\n\n  return store;\n});","map":null,"metadata":{},"sourceType":"module"}