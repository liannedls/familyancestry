{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import classNames from'classnames';import styles from'./FamilyNode.module.css';import Modal from'react-modal';function Iflink(link){if(link){return/*#__PURE__*/React.createElement(\"div\",null,\"hello\",/*#__PURE__*/React.createElement(\"a\",{href:link},\"See more\"));}}var customStyles={content:{top:'50%',left:'50%',right:'auto',bottom:'auto',marginRight:'-50%',transform:'translate(-50%, -50%)'}};// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('*');export default React.memo(function FamilyNode(_ref){var node=_ref.node,isRoot=_ref.isRoot,onSubClick=_ref.onSubClick,style=_ref.style,namePerson=_ref.namePerson;var subtitle;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),modalIsOpen=_React$useState2[0],setIsOpen=_React$useState2[1];function openModal(){setIsOpen(true);}function afterOpenModal(){// references are now sync'd and can be accessed.\nsubtitle.style.color='#f00';}function closeModal(){setIsOpen(false);}return/*#__PURE__*/React.createElement(\"div\",{className:styles.root,style:style},/*#__PURE__*/React.createElement(\"button\",{onClick:openModal,className:classNames(styles.inner,styles[node.gender],isRoot&&styles.isRoot)},/*#__PURE__*/React.createElement(\"p\",{className:styles.person},namePerson)),node.hasSubTree&&/*#__PURE__*/React.createElement(\"div\",{className:classNames(styles.sub,styles[node.gender]),onClick:function onClick(){return onSubClick(node.id);}}),/*#__PURE__*/React.createElement(Modal,{isOpen:modalIsOpen,onAfterOpen:afterOpenModal,onRequestClose:closeModal,style:customStyles,contentLabel:\"Example Modal\"},/*#__PURE__*/React.createElement(\"h2\",{ref:function ref(_subtitle){return subtitle=_subtitle;}},\"Hello\"),/*#__PURE__*/React.createElement(\"button\",{onClick:closeModal},\"close\"),/*#__PURE__*/React.createElement(\"div\",{className:styles.popupTop},node.name),/*#__PURE__*/React.createElement(\"div\",{className:styles.popupContent},\"DOB: \",node.dob,\"DOD: \",node.dod,Iflink(node.link)),/*#__PURE__*/React.createElement(\"img\",{src:node.src})));});","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/src/frontend/FamilyNode/FamilyNode.tsx"],"names":["React","classNames","styles","Modal","Iflink","link","customStyles","content","top","left","right","bottom","marginRight","transform","setAppElement","memo","FamilyNode","node","isRoot","onSubClick","style","namePerson","subtitle","useState","modalIsOpen","setIsOpen","openModal","afterOpenModal","color","closeModal","root","inner","gender","person","hasSubTree","sub","id","_subtitle","popupTop","name","popupContent","dob","dod","src"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAUA,QAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAqB,CACnB,GAAIA,IAAJ,CAAS,CACL,mBACE,oDAEA,yBAAG,IAAI,CAAEA,IAAT,aAFA,CADF,CAMH,CACF,CACD,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAG,CACRC,GAAG,CAAqB,KADhB,CAERC,IAAI,CAAoB,KAFhB,CAGRC,KAAK,CAAmB,MAHhB,CAIRC,MAAM,CAAkB,MAJhB,CAKRC,WAAW,CAAa,MALhB,CAMRC,SAAS,CAAe,uBANhB,CADS,CAArB,CAWA;AACAV,KAAK,CAACW,aAAN,CAAoB,GAApB,EAEA,cAAed,CAAAA,KAAK,CAACe,IAAN,CAEb,QAASC,CAAAA,UAAT,MAAqE,IAA/CC,CAAAA,IAA+C,MAA/CA,IAA+C,CAAzCC,MAAyC,MAAzCA,MAAyC,CAAjCC,UAAiC,MAAjCA,UAAiC,CAArBC,KAAqB,MAArBA,KAAqB,CAAdC,UAAc,MAAdA,UAAc,CACnE,GAAIC,CAAAA,QAAJ,CADmE,oBAEnCtB,KAAK,CAACuB,QAAN,CAAe,KAAf,CAFmC,oDAE5DC,WAF4D,qBAEhDC,SAFgD,qBAGnE,QAASC,CAAAA,SAAT,EAAqB,CACnBD,SAAS,CAAC,IAAD,CAAT,CACD,CAED,QAASE,CAAAA,cAAT,EAA0B,CACxB;AACAL,QAAQ,CAACF,KAAT,CAAeQ,KAAf,CAAuB,MAAvB,CACD,CAED,QAASC,CAAAA,UAAT,EAAqB,CACnBJ,SAAS,CAAC,KAAD,CAAT,CACD,CACD,mBACE,2BAAK,SAAS,CAAEvB,MAAM,CAAC4B,IAAvB,CAA6B,KAAK,CAAEV,KAApC,eACM,8BAAQ,OAAO,CAAEM,SAAjB,CACA,SAAS,CAAEzB,UAAU,CACnBC,MAAM,CAAC6B,KADY,CAEnB7B,MAAM,CAACe,IAAI,CAACe,MAAN,CAFa,CAGnBd,MAAM,EAAIhB,MAAM,CAACgB,MAHE,CADrB,eAOF,yBAAG,SAAS,CAAEhB,MAAM,CAAC+B,MAArB,EACCZ,UADD,CAPE,CADN,CAcGJ,IAAI,CAACiB,UAAL,eACC,2BACE,SAAS,CAAEjC,UAAU,CAACC,MAAM,CAACiC,GAAR,CAAajC,MAAM,CAACe,IAAI,CAACe,MAAN,CAAnB,CADvB,CAEE,OAAO,CAAE,yBAAMb,CAAAA,UAAU,CAACF,IAAI,CAACmB,EAAN,CAAhB,EAFX,EAfJ,cAuBE,oBAAC,KAAD,EACE,MAAM,CAAEZ,WADV,CAEE,WAAW,CAAEG,cAFf,CAGE,cAAc,CAAEE,UAHlB,CAIE,KAAK,CAAEvB,YAJT,CAKE,YAAY,CAAC,eALf,eAQE,0BAAI,GAAG,CAAE,aAAA+B,SAAS,QAAKf,CAAAA,QAAQ,CAAGe,SAAhB,EAAlB,UARF,cASE,8BAAQ,OAAO,CAAER,UAAjB,UATF,cAUE,2BAAK,SAAS,CAAI3B,MAAM,CAACoC,QAAzB,EACGrB,IAAI,CAACsB,IADR,CAVF,cAcM,2BAAK,SAAS,CAAIrC,MAAM,CAACsC,YAAzB,UACMvB,IAAI,CAACwB,GADX,SAEMxB,IAAI,CAACyB,GAFX,CAGCtC,MAAM,CAACa,IAAI,CAACZ,IAAN,CAHP,CAdN,cAoBI,2BAAK,GAAG,CAAEY,IAAI,CAAC0B,GAAf,EApBJ,CAvBF,CADF,CAiDD,CAlEY,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport classNames from 'classnames';\r\nimport { IFamilyExtNode } from 'relatives-tree';\r\nimport styles from './FamilyNode.module.css';\r\nimport Modal from 'react-modal';\r\n\r\ninterface Props {\r\n  node: IFamilyExtNode;\r\n  isRoot: boolean;\r\n  onSubClick: (id: string) => void;\r\n  style?: React.CSSProperties;\r\n  namePerson: string;\r\n}\r\n\r\nfunction Iflink(link){\r\n  if (link){\r\n      return(\r\n        <div>\r\n        hello\r\n        <a href={link}>See more</a>\r\n        </div>\r\n      )\r\n  }\r\n}\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('*')\r\n\r\nexport default React.memo<Props>(\r\n\r\n  function FamilyNode({ node, isRoot, onSubClick, style, namePerson }) {\r\n    var subtitle;\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n    function openModal() {\r\n      setIsOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n      // references are now sync'd and can be accessed.\r\n      subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeModal(){\r\n      setIsOpen(false);\r\n    }\r\n    return (\r\n      <div className={styles.root} style={style}>\r\n            <button onClick={openModal}\r\n            className={classNames(\r\n              styles.inner,\r\n              styles[node.gender],\r\n              isRoot && styles.isRoot,\r\n            )}\r\n          >\r\n          <p className={styles.person}>\r\n          {namePerson}\r\n          </p>\r\n</button>\r\n\r\n\r\n        {node.hasSubTree && (\r\n          <div\r\n            className={classNames(styles.sub, styles[node.gender])}\r\n            onClick={() => onSubClick(node.id)}\r\n          />\r\n        )}\r\n\r\n\r\n\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n\r\n          <h2 ref={_subtitle => (subtitle = _subtitle)}>Hello</h2>\r\n          <button onClick={closeModal}>close</button>\r\n          <div className = {styles.popupTop}>\r\n            {node.name}\r\n\r\n          </div>\r\n              <div className = {styles.popupContent}>\r\n              DOB: {node.dob}\r\n              DOD: {node.dod}\r\n              {Iflink(node.link)}\r\n              </div>\r\n\r\n            <img src={node.src} />\r\n        \r\n        </Modal>\r\n          </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}