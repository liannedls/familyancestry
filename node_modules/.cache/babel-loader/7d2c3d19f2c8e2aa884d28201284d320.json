{"ast":null,"code":"import setUnitDefShifts from '../utils/setUnitDefShifts';\nimport { prop, withId } from '../utils';\nexport default ((lFamily, rFamily) => {\n  const lChildren = lFamily.cUnits.reduce((a, b) => a.concat(b.nodes), []);\n  const rChildren = rFamily.cUnits.reduce((a, b) => a.concat(b.nodes), []);\n  const ids = lChildren.filter(node => !!rChildren.find(withId(node.id))).map(prop('id'));\n  const shifts = lFamily.cUnits.map(prop('shift'));\n  lFamily.cUnits = lFamily.cUnits.sort((a, b) => {\n    const foundA = !!a.nodes.find(node => ids.indexOf(node.id) !== -1);\n    const foundB = !!b.nodes.find(node => ids.indexOf(node.id) !== -1);\n    if (foundA && !foundB) return 1;else if (!foundA && foundB) return -1;\n    return 0;\n  });\n  lFamily.cUnits.forEach((unit, idx) => unit.shift = shifts[idx]);\n  rFamily.cUnits = rFamily.cUnits.filter(unit => !!unit.nodes.find(node => ids.indexOf(node.id) === -1));\n  setUnitDefShifts(rFamily);\n});","map":{"version":3,"sources":["../../src/middle/fixOverlaps.ts"],"names":[],"mappings":"AAEA,OAAO,gBAAP,MAA6B,2BAA7B;AACA,SAAS,IAAT,EAAe,MAAf,QAA6B,UAA7B;AAIA,gBAAe,CAAC,OAAD,EAAkB,OAAlB,KAAqC;AAClD,QAAM,SAAS,GAAkB,OAAO,CAAC,MAAR,CAC9B,MAD8B,CACvB,CAAC,CAAD,EAAmB,CAAnB,KAA+B,CAAC,CAAC,MAAF,CAAS,CAAC,CAAC,KAAX,CADR,EAC2B,EAD3B,CAAjC;AAEA,QAAM,SAAS,GAAkB,OAAO,CAAC,MAAR,CAC9B,MAD8B,CACvB,CAAC,CAAD,EAAmB,CAAnB,KAA+B,CAAC,CAAC,MAAF,CAAS,CAAC,CAAC,KAAX,CADR,EAC2B,EAD3B,CAAjC;AAGA,QAAM,GAAG,GAAG,SAAS,CAAC,MAAV,CAAiB,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,IAAI,CAAC,EAAN,CAArB,CAA3B,EAA4D,GAA5D,CAAgE,IAAI,CAAC,IAAD,CAApE,CAAZ;AACA,QAAM,MAAM,GAAG,OAAO,CAAC,MAAR,CAAe,GAAf,CAAmB,IAAI,CAAC,OAAD,CAAvB,CAAf;AAGA,EAAA,OAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,CAAC,CAAD,EAAI,CAAJ,KAAS;AAC5C,UAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAF,CAAQ,IAAR,CAAa,IAAI,IAAI,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,EAAjB,MAAyB,CAAC,CAA/C,CAAjB;AACA,UAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAF,CAAQ,IAAR,CAAa,IAAI,IAAI,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,EAAjB,MAAyB,CAAC,CAA/C,CAAjB;AAEA,QAAI,MAAM,IAAI,CAAC,MAAf,EAAuB,OAAO,CAAP,CAAvB,KACK,IAAI,CAAC,MAAD,IAAW,MAAf,EAAuB,OAAO,CAAC,CAAR;AAC5B,WAAO,CAAP;AACD,GAPgB,CAAjB;AAUA,EAAA,OAAO,CAAC,MAAR,CAAe,OAAf,CAAuB,CAAC,IAAD,EAAO,GAAP,KAAe,IAAI,CAAC,KAAL,GAAa,MAAM,CAAC,GAAD,CAAzD;AAGA,EAAA,OAAO,CAAC,MAAR,GAAiB,OAAO,CAAC,MAAR,CAAe,MAAf,CAAsB,IAAI,IACzC,CAAC,CAAC,IAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,IAAI,IAAI,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,EAAjB,MAAyB,CAAC,CAAlD,CADa,CAAjB;AAIA,EAAA,gBAAgB,CAAC,OAAD,CAAhB;AACD,CA5BD","sourceRoot":"","sourcesContent":["import setUnitDefShifts from '../utils/setUnitDefShifts';\nimport { prop, withId } from '../utils';\nexport default (lFamily, rFamily) => {\n    const lChildren = lFamily.cUnits\n        .reduce((a, b) => a.concat(b.nodes), []);\n    const rChildren = rFamily.cUnits\n        .reduce((a, b) => a.concat(b.nodes), []);\n    const ids = lChildren.filter(node => !!rChildren.find(withId(node.id))).map(prop('id'));\n    const shifts = lFamily.cUnits.map(prop('shift'));\n    lFamily.cUnits = lFamily.cUnits.sort((a, b) => {\n        const foundA = !!a.nodes.find(node => ids.indexOf(node.id) !== -1);\n        const foundB = !!b.nodes.find(node => ids.indexOf(node.id) !== -1);\n        if (foundA && !foundB)\n            return 1;\n        else if (!foundA && foundB)\n            return -1;\n        return 0;\n    });\n    lFamily.cUnits.forEach((unit, idx) => unit.shift = shifts[idx]);\n    rFamily.cUnits = rFamily.cUnits.filter(unit => (!!unit.nodes.find(node => ids.indexOf(node.id) === -1)));\n    setUnitDefShifts(rFamily);\n};\n//# sourceMappingURL=fixOverlaps.js.map"]},"metadata":{},"sourceType":"module"}