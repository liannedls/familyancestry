{"ast":null,"code":"import { withId, withType, inAscOrder } from '../utils';\nexport default (families => {\n  const connectors = [];\n  families.filter(withType('root')).forEach(family => {\n    family.pUnits.forEach(pUnit => {\n      const pX = family.left + pUnit.shift + 1;\n      const pY = family.top + 1;\n\n      if (pUnit.size === 2) {\n        connectors.push({\n          points: [pX, pY, pX + 2, pY]\n        });\n      } else if (pUnit.size === 1 && pUnit.nodes[0].spouses.length) {\n        families.filter(rFamily => rFamily.id !== family.id).forEach(rFamily => {\n          rFamily.pUnits.forEach(unit => {\n            if (unit.nodes.findIndex(withId(pUnit.nodes[0].spouses[0].id)) !== -1) {\n              const xX = [pX, rFamily.left + unit.shift + 1].sort(inAscOrder);\n              connectors.push({\n                points: [xX[0], pY, xX[1], pY]\n              });\n            }\n          });\n        });\n      }\n    });\n  });\n  return connectors;\n});","map":null,"metadata":{},"sourceType":"module"}