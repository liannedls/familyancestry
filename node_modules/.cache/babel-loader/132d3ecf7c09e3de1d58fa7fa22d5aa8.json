{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\src\\\\frontend\\\\FamilyNode\\\\FamilyNode.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './FamilyNode.module.css';\n\nfunction Iflink(link) {\n  if (link) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"hello\", /*#__PURE__*/React.createElement(\"a\", {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"See more\"));\n  }\n}\n\nexport default React.memo(function FamilyNode({\n  node,\n  isRoot,\n  onSubClick,\n  style,\n  namePerson\n}) {\n  var subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classNames(styles.inner, styles[node.gender], isRoot && styles.isRoot),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, namePerson)), node.hasSubTree && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.sub, styles[node.gender]),\n    onClick: () => onSubClick(node.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, node.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"DOB: \", node.dob, \"DOD: \", node.dod, Iflink(node.link)), /*#__PURE__*/React.createElement(\"img\", {\n    src: node.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/src/frontend/FamilyNode/FamilyNode.tsx"],"names":["React","classNames","styles","Iflink","link","memo","FamilyNode","node","isRoot","onSubClick","style","namePerson","subtitle","modalIsOpen","setIsOpen","useState","openModal","afterOpenModal","color","closeModal","root","inner","gender","person","hasSubTree","sub","id","popupTop","name","popupContent","dob","dod","src"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAWA,SAASC,MAAT,CAAgBC,IAAhB,EAAqB;AACnB,MAAIA,IAAJ,EAAS;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAG,MAAA,IAAI,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CADF;AAMH;AACF;;AAED,eAAeJ,KAAK,CAACK,IAAN,CAEb,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,KAA5B;AAAmCC,EAAAA;AAAnC,CAApB,EAAqE;AACnE,MAAIC,QAAJ;AACA,QAAM,CAACC,WAAD,EAAaC,SAAb,IAA0Bd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAhC;;AACA,WAASC,SAAT,GAAqB;AACnBF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASG,cAAT,GAA0B;AACxB;AACAL,IAAAA,QAAQ,CAACF,KAAT,CAAeQ,KAAf,GAAuB,MAAvB;AACD;;AAED,WAASC,UAAT,GAAqB;AACnBL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACkB,IAAvB;AAA6B,IAAA,KAAK,EAAEV,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AACA,IAAA,SAAS,EAAET,UAAU,CACnBC,MAAM,CAACmB,KADY,EAEnBnB,MAAM,CAACK,IAAI,CAACe,MAAN,CAFa,EAGnBd,MAAM,IAAIN,MAAM,CAACM,MAHE,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOF;AAAG,IAAA,SAAS,EAAEN,MAAM,CAACqB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCZ,UADD,CAPE,CADN,EAcGJ,IAAI,CAACiB,UAAL,iBACC;AACE,IAAA,SAAS,EAAEvB,UAAU,CAACC,MAAM,CAACuB,GAAR,EAAavB,MAAM,CAACK,IAAI,CAACe,MAAN,CAAnB,CADvB;AAEE,IAAA,OAAO,EAAE,MAAMb,UAAU,CAACF,IAAI,CAACmB,EAAN,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAsBA;AAAK,IAAA,SAAS,EAAIxB,MAAM,CAACyB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,IAAI,CAACqB,IADR,CAtBA,eA0BI;AAAK,IAAA,SAAS,EAAI1B,MAAM,CAAC2B,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACMtB,IAAI,CAACuB,GADX,WAEMvB,IAAI,CAACwB,GAFX,EAGC5B,MAAM,CAACI,IAAI,CAACH,IAAN,CAHP,CA1BJ,eAgCE;AAAK,IAAA,GAAG,EAAEG,IAAI,CAACyB,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF;AAoCD,CArDY,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport classNames from 'classnames';\r\nimport { IFamilyExtNode } from 'relatives-tree';\r\nimport styles from './FamilyNode.module.css';\r\n\r\n\r\ninterface Props {\r\n  node: IFamilyExtNode;\r\n  isRoot: boolean;\r\n  onSubClick: (id: string) => void;\r\n  style?: React.CSSProperties;\r\n  namePerson: string;\r\n}\r\n\r\nfunction Iflink(link){\r\n  if (link){\r\n      return(\r\n        <div>\r\n        hello\r\n        <a href={link}>See more</a>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default React.memo<Props>(\r\n\r\n  function FamilyNode({ node, isRoot, onSubClick, style, namePerson }) {\r\n    var subtitle;\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n    function openModal() {\r\n      setIsOpen(true);\r\n    }\r\n\r\n    function afterOpenModal() {\r\n      // references are now sync'd and can be accessed.\r\n      subtitle.style.color = '#f00';\r\n    }\r\n\r\n    function closeModal(){\r\n      setIsOpen(false);\r\n    }\r\n    return (\r\n      <div className={styles.root} style={style}>\r\n            <button\r\n            className={classNames(\r\n              styles.inner,\r\n              styles[node.gender],\r\n              isRoot && styles.isRoot,\r\n            )}\r\n          >\r\n          <p className={styles.person}>\r\n          {namePerson}\r\n          </p>\r\n</button>\r\n\r\n\r\n        {node.hasSubTree && (\r\n          <div\r\n            className={classNames(styles.sub, styles[node.gender])}\r\n            onClick={() => onSubClick(node.id)}\r\n          />\r\n        )}\r\n\r\n\r\n      <div className = {styles.popupTop}>\r\n        {node.name}\r\n\r\n      </div>\r\n          <div className = {styles.popupContent}>\r\n          DOB: {node.dob}\r\n          DOD: {node.dod}\r\n          {Iflink(node.link)}\r\n          </div>\r\n\r\n        <img src={node.src} />\r\n          </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}