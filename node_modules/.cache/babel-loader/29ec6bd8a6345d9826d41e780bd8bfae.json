{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getTransitionTimeMs;\n\nfunction getTransitionTimeMs(heightTransition) {\n  var m = /(\\d+(?:\\.\\d+)?|\\.\\d+)(m?s)\\b/i.exec(heightTransition);\n  if (!m) throw new Error('Could not parse time from transition value');\n  return Number(m[1]) * (m[2].length === 1 ? 1000 : 1);\n}","map":{"version":3,"sources":["../src/getTransitionTimeMs.js"],"names":["m","Number"],"mappings":";;;;;;;AAEe,SAAA,mBAAA,CAAA,gBAAA,EAA+D;AAC5E,MAAMA,CAAC,GAAG,gCAAA,IAAA,CAAV,gBAAU,CAAV;AACA,MAAI,CAAJ,CAAA,EAAQ,MAAM,IAAA,KAAA,CAAN,4CAAM,CAAN;AACR,SAAOC,MAAM,CAACD,CAAC,CAARC,CAAQ,CAAF,CAANA,IAAgBD,CAAC,CAADA,CAAC,CAADA,CAAAA,MAAAA,KAAAA,CAAAA,GAAAA,IAAAA,GAAvB,CAAOC,CAAP;AACD","sourcesContent":["/* @flow */\n\nexport default function getTransitionTimeMs(heightTransition: string): number {\n  const m = /(\\d+(?:\\.\\d+)?|\\.\\d+)(m?s)\\b/i.exec(heightTransition);\n  if (!m) throw new Error('Could not parse time from transition value');\n  return Number(m[1]) * (m[2].length === 1 ? 1000 : 1);\n}\n"]},"metadata":{},"sourceType":"script"}