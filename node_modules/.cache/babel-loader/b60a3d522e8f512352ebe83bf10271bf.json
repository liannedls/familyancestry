{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setRef = setRef;\nexports.getRequiredImagePosition = exports.getImageOverflow = exports.tryCancelEvent = exports.getMinScale = exports.getAutofitScale = exports.isEqualTransform = exports.getContainerDimensions = exports.getDimensions = exports.isEqualDimensions = exports.getPinchLength = exports.getPinchMidpoint = exports.getRelativePosition = exports.negate = exports.constrain = exports.snapToTarget = void 0;\n\nvar _reselect = require(\"reselect\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar snapToTarget = function snapToTarget(value, target, tolerance) {\n  var withinRange = Math.abs(target - value) < tolerance;\n  return withinRange ? target : value;\n};\n\nexports.snapToTarget = snapToTarget;\n\nvar constrain = function constrain(lowerBound, upperBound, value) {\n  return Math.min(upperBound, Math.max(lowerBound, value));\n};\n\nexports.constrain = constrain;\n\nvar negate = function negate(value) {\n  return value * -1;\n};\n\nexports.negate = negate;\n\nvar getRelativePosition = function getRelativePosition(_ref, relativeToElement) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  var rect = relativeToElement.getBoundingClientRect();\n  return {\n    x: clientX - rect.left,\n    y: clientY - rect.top\n  };\n};\n\nexports.getRelativePosition = getRelativePosition;\n\nvar getPinchMidpoint = function getPinchMidpoint(_ref2) {\n  var _ref3 = _slicedToArray(_ref2, 2),\n      touch1 = _ref3[0],\n      touch2 = _ref3[1];\n\n  return {\n    x: (touch1.clientX + touch2.clientX) / 2,\n    y: (touch1.clientY + touch2.clientY) / 2\n  };\n};\n\nexports.getPinchMidpoint = getPinchMidpoint;\n\nvar getPinchLength = function getPinchLength(_ref4) {\n  var _ref5 = _slicedToArray(_ref4, 2),\n      touch1 = _ref5[0],\n      touch2 = _ref5[1];\n\n  return Math.sqrt(Math.pow(touch1.clientY - touch2.clientY, 2) + Math.pow(touch1.clientX - touch2.clientX, 2));\n};\n\nexports.getPinchLength = getPinchLength;\n\nfunction setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\n;\n\nvar isEqualDimensions = function isEqualDimensions(dimensions1, dimensions2) {\n  if (dimensions1 === dimensions2 === undefined) {\n    return true;\n  }\n\n  if (dimensions1 === undefined || dimensions2 === undefined) {\n    return false;\n  }\n\n  return dimensions1.width === dimensions2.width && dimensions1.height === dimensions2.height;\n};\n\nexports.isEqualDimensions = isEqualDimensions;\n\nvar getDimensions = function getDimensions(object) {\n  if (object === undefined) {\n    return undefined;\n  }\n\n  return {\n    width: object.offsetWidth || object.width,\n    height: object.offsetHeight || object.height\n  };\n};\n\nexports.getDimensions = getDimensions;\n\nvar getContainerDimensions = function getContainerDimensions(image) {\n  return {\n    width: image.parentNode.offsetWidth,\n    height: image.parentNode.offsetHeight\n  };\n};\n\nexports.getContainerDimensions = getContainerDimensions;\n\nvar isEqualTransform = function isEqualTransform(transform1, transform2) {\n  if (transform1 === transform2 === undefined) {\n    return true;\n  }\n\n  if (transform1 === undefined || transform2 === undefined) {\n    return false;\n  }\n\n  return round(transform1.top, 5) === round(transform2.top, 5) && round(transform1.left, 5) === round(transform2.left, 5) && round(transform1.scale, 5) === round(transform2.scale, 5);\n};\n\nexports.isEqualTransform = isEqualTransform;\n\nvar getAutofitScale = function getAutofitScale(containerDimensions, imageDimensions) {\n  var _ref6 = imageDimensions || {},\n      imageWidth = _ref6.width,\n      imageHeight = _ref6.height;\n\n  if (!(imageWidth > 0 && imageHeight > 0)) {\n    return 1;\n  }\n\n  return Math.min(containerDimensions.width / imageWidth, containerDimensions.height / imageHeight, 1);\n};\n\nexports.getAutofitScale = getAutofitScale;\nvar getMinScale = (0, _reselect.createSelector)(function (state) {\n  return state.containerDimensions;\n}, function (state) {\n  return state.imageDimensions;\n}, function (state, props) {\n  return props.minScale;\n}, function (containerDimensions, imageDimensions, minScaleProp) {\n  return String(minScaleProp).toLowerCase() === 'auto' ? getAutofitScale(containerDimensions, imageDimensions) : minScaleProp || 1;\n});\nexports.getMinScale = getMinScale;\n\nfunction round(number, precision) {\n  if (precision && number !== null && number !== undefined) {\n    // Shift with exponential notation to avoid floating-point issues.\n    // See [MDN](https://mdn.io/round#Examples) for more details.\n    var pair = (String(number) + 'e').split('e'),\n        value = Math.round(pair[0] + 'e' + (+pair[1] + precision));\n    pair = (String(value) + 'e').split('e');\n    return +(pair[0] + 'e' + (+pair[1] - precision));\n  }\n\n  return Math.round(number);\n}\n\n;\n\nvar tryCancelEvent = function tryCancelEvent(event) {\n  if (event.cancelable === false) {\n    return false;\n  }\n\n  event.preventDefault();\n  return true;\n};\n\nexports.tryCancelEvent = tryCancelEvent;\n\nfunction calculateOverflowLeft(left, scale, imageDimensions, containerDimensions) {\n  var overflow = negate(left);\n  return overflow > 0 ? overflow : 0;\n}\n\nfunction calculateOverflowTop(top, scale, imageDimensions, containerDimensions) {\n  var overflow = negate(top);\n  return overflow > 0 ? overflow : 0;\n}\n\nfunction calculateOverflowRight(left, scale, imageDimensions, containerDimensions) {\n  var overflow = Math.max(0, scale * imageDimensions.width - containerDimensions.width);\n  return overflow > 0 ? overflow - negate(left) : 0;\n}\n\nfunction calculateOverflowBottom(top, scale, imageDimensions, containerDimensions) {\n  var overflow = Math.max(0, scale * imageDimensions.height - containerDimensions.height);\n  return overflow > 0 ? overflow - negate(top) : 0;\n}\n\nvar getImageOverflow = function getImageOverflow(top, left, scale, imageDimensions, containerDimensions) {\n  return {\n    top: calculateOverflowTop(top, scale, imageDimensions, containerDimensions),\n    right: calculateOverflowRight(left, scale, imageDimensions, containerDimensions),\n    bottom: calculateOverflowBottom(top, scale, imageDimensions, containerDimensions),\n    left: calculateOverflowLeft(left, scale, imageDimensions, containerDimensions)\n  };\n};\n\nexports.getImageOverflow = getImageOverflow;\n\nvar getRequiredImagePosition = function getRequiredImagePosition(position, scale, imageDimensions, containerDimensions) {\n  var overflow = getImageOverflow();\n};\n\nexports.getRequiredImagePosition = getRequiredImagePosition;","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/node_modules/react-responsive-pinch-zoom-pan/dist/Utils.js"],"names":["Object","defineProperty","exports","value","setRef","getRequiredImagePosition","getImageOverflow","tryCancelEvent","getMinScale","getAutofitScale","isEqualTransform","getContainerDimensions","getDimensions","isEqualDimensions","getPinchLength","getPinchMidpoint","getRelativePosition","negate","constrain","snapToTarget","_reselect","require","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","target","tolerance","withinRange","Math","abs","lowerBound","upperBound","min","max","_ref","relativeToElement","clientX","clientY","rect","getBoundingClientRect","x","left","y","top","_ref2","_ref3","touch1","touch2","_ref4","_ref5","sqrt","pow","ref","current","dimensions1","dimensions2","width","height","object","offsetWidth","offsetHeight","image","parentNode","transform1","transform2","round","scale","containerDimensions","imageDimensions","_ref6","imageWidth","imageHeight","createSelector","state","props","minScale","minScaleProp","String","toLowerCase","number","precision","pair","split","event","cancelable","preventDefault","calculateOverflowLeft","overflow","calculateOverflowTop","calculateOverflowRight","calculateOverflowBottom","right","bottom","position"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setRef = setRef;\nexports.getRequiredImagePosition = exports.getImageOverflow = exports.tryCancelEvent = exports.getMinScale = exports.getAutofitScale = exports.isEqualTransform = exports.getContainerDimensions = exports.getDimensions = exports.isEqualDimensions = exports.getPinchLength = exports.getPinchMidpoint = exports.getRelativePosition = exports.negate = exports.constrain = exports.snapToTarget = void 0;\n\nvar _reselect = require(\"reselect\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar snapToTarget = function snapToTarget(value, target, tolerance) {\n  var withinRange = Math.abs(target - value) < tolerance;\n  return withinRange ? target : value;\n};\n\nexports.snapToTarget = snapToTarget;\n\nvar constrain = function constrain(lowerBound, upperBound, value) {\n  return Math.min(upperBound, Math.max(lowerBound, value));\n};\n\nexports.constrain = constrain;\n\nvar negate = function negate(value) {\n  return value * -1;\n};\n\nexports.negate = negate;\n\nvar getRelativePosition = function getRelativePosition(_ref, relativeToElement) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  var rect = relativeToElement.getBoundingClientRect();\n  return {\n    x: clientX - rect.left,\n    y: clientY - rect.top\n  };\n};\n\nexports.getRelativePosition = getRelativePosition;\n\nvar getPinchMidpoint = function getPinchMidpoint(_ref2) {\n  var _ref3 = _slicedToArray(_ref2, 2),\n      touch1 = _ref3[0],\n      touch2 = _ref3[1];\n\n  return {\n    x: (touch1.clientX + touch2.clientX) / 2,\n    y: (touch1.clientY + touch2.clientY) / 2\n  };\n};\n\nexports.getPinchMidpoint = getPinchMidpoint;\n\nvar getPinchLength = function getPinchLength(_ref4) {\n  var _ref5 = _slicedToArray(_ref4, 2),\n      touch1 = _ref5[0],\n      touch2 = _ref5[1];\n\n  return Math.sqrt(Math.pow(touch1.clientY - touch2.clientY, 2) + Math.pow(touch1.clientX - touch2.clientX, 2));\n};\n\nexports.getPinchLength = getPinchLength;\n\nfunction setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\n;\n\nvar isEqualDimensions = function isEqualDimensions(dimensions1, dimensions2) {\n  if (dimensions1 === dimensions2 === undefined) {\n    return true;\n  }\n\n  if (dimensions1 === undefined || dimensions2 === undefined) {\n    return false;\n  }\n\n  return dimensions1.width === dimensions2.width && dimensions1.height === dimensions2.height;\n};\n\nexports.isEqualDimensions = isEqualDimensions;\n\nvar getDimensions = function getDimensions(object) {\n  if (object === undefined) {\n    return undefined;\n  }\n\n  return {\n    width: object.offsetWidth || object.width,\n    height: object.offsetHeight || object.height\n  };\n};\n\nexports.getDimensions = getDimensions;\n\nvar getContainerDimensions = function getContainerDimensions(image) {\n  return {\n    width: image.parentNode.offsetWidth,\n    height: image.parentNode.offsetHeight\n  };\n};\n\nexports.getContainerDimensions = getContainerDimensions;\n\nvar isEqualTransform = function isEqualTransform(transform1, transform2) {\n  if (transform1 === transform2 === undefined) {\n    return true;\n  }\n\n  if (transform1 === undefined || transform2 === undefined) {\n    return false;\n  }\n\n  return round(transform1.top, 5) === round(transform2.top, 5) && round(transform1.left, 5) === round(transform2.left, 5) && round(transform1.scale, 5) === round(transform2.scale, 5);\n};\n\nexports.isEqualTransform = isEqualTransform;\n\nvar getAutofitScale = function getAutofitScale(containerDimensions, imageDimensions) {\n  var _ref6 = imageDimensions || {},\n      imageWidth = _ref6.width,\n      imageHeight = _ref6.height;\n\n  if (!(imageWidth > 0 && imageHeight > 0)) {\n    return 1;\n  }\n\n  return Math.min(containerDimensions.width / imageWidth, containerDimensions.height / imageHeight, 1);\n};\n\nexports.getAutofitScale = getAutofitScale;\nvar getMinScale = (0, _reselect.createSelector)(function (state) {\n  return state.containerDimensions;\n}, function (state) {\n  return state.imageDimensions;\n}, function (state, props) {\n  return props.minScale;\n}, function (containerDimensions, imageDimensions, minScaleProp) {\n  return String(minScaleProp).toLowerCase() === 'auto' ? getAutofitScale(containerDimensions, imageDimensions) : minScaleProp || 1;\n});\nexports.getMinScale = getMinScale;\n\nfunction round(number, precision) {\n  if (precision && number !== null && number !== undefined) {\n    // Shift with exponential notation to avoid floating-point issues.\n    // See [MDN](https://mdn.io/round#Examples) for more details.\n    var pair = (String(number) + 'e').split('e'),\n        value = Math.round(pair[0] + 'e' + (+pair[1] + precision));\n    pair = (String(value) + 'e').split('e');\n    return +(pair[0] + 'e' + (+pair[1] - precision));\n  }\n\n  return Math.round(number);\n}\n\n;\n\nvar tryCancelEvent = function tryCancelEvent(event) {\n  if (event.cancelable === false) {\n    return false;\n  }\n\n  event.preventDefault();\n  return true;\n};\n\nexports.tryCancelEvent = tryCancelEvent;\n\nfunction calculateOverflowLeft(left, scale, imageDimensions, containerDimensions) {\n  var overflow = negate(left);\n  return overflow > 0 ? overflow : 0;\n}\n\nfunction calculateOverflowTop(top, scale, imageDimensions, containerDimensions) {\n  var overflow = negate(top);\n  return overflow > 0 ? overflow : 0;\n}\n\nfunction calculateOverflowRight(left, scale, imageDimensions, containerDimensions) {\n  var overflow = Math.max(0, scale * imageDimensions.width - containerDimensions.width);\n  return overflow > 0 ? overflow - negate(left) : 0;\n}\n\nfunction calculateOverflowBottom(top, scale, imageDimensions, containerDimensions) {\n  var overflow = Math.max(0, scale * imageDimensions.height - containerDimensions.height);\n  return overflow > 0 ? overflow - negate(top) : 0;\n}\n\nvar getImageOverflow = function getImageOverflow(top, left, scale, imageDimensions, containerDimensions) {\n  return {\n    top: calculateOverflowTop(top, scale, imageDimensions, containerDimensions),\n    right: calculateOverflowRight(left, scale, imageDimensions, containerDimensions),\n    bottom: calculateOverflowBottom(top, scale, imageDimensions, containerDimensions),\n    left: calculateOverflowLeft(left, scale, imageDimensions, containerDimensions)\n  };\n};\n\nexports.getImageOverflow = getImageOverflow;\n\nvar getRequiredImagePosition = function getRequiredImagePosition(position, scale, imageDimensions, containerDimensions) {\n  var overflow = getImageOverflow();\n};\n\nexports.getRequiredImagePosition = getRequiredImagePosition;"]},"metadata":{},"sourceType":"script"}