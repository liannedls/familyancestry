{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\src\\\\frontend\\\\FamilyNode\\\\FamilyNode.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './FamilyNode.module.css';\nimport Popup from \"reactjs-popup\";\n\nfunction Iflink(link) {\n  if (link) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 1\n      }\n    }, \"hello\", /*#__PURE__*/React.createElement(\"a\", {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 1\n      }\n    }, \"See more\"));\n  }\n}\n\nexport default React.memo(function FamilyNode({\n  node,\n  isRoot,\n  onSubClick,\n  style,\n  namePerson\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    trigger: /*#__PURE__*/React.createElement(\"button\", {\n      className: classNames(styles.inner, styles[node.gender], isRoot && styles.isRoot),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.person,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, namePerson)),\n    position: \"right top\",\n    contentStyle: {\n      width: \"300px\",\n      height: \"300px\",\n      background: \"#f2eecb\",\n      padding: \"0px\",\n      border: \"none\",\n      position: \"relative\"\n    },\n    on: \"hover\",\n    closeOnDocumentClick: true,\n    mouseLeaveDelay: 300,\n    mouseEnterDelay: 300,\n    arrow: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, close => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, node.name, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"close\",\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"DOB: \", node.dob, \"DOD: \", node.dod, Iflink(node.link)), /*#__PURE__*/React.createElement(\"img\", {\n    src: node.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))), node.hasSubTree && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.sub, styles[node.gender]),\n    onClick: () => onSubClick(node.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/src/frontend/FamilyNode/FamilyNode.tsx"],"names":["React","classNames","styles","Popup","Iflink","link","memo","FamilyNode","node","isRoot","onSubClick","style","namePerson","root","inner","gender","person","width","height","background","padding","border","position","close","popupTop","name","popupContent","dob","dod","src","hasSubTree","sub","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { IFamilyExtNode } from 'relatives-tree';\r\nimport styles from './FamilyNode.module.css';\r\nimport Popup from \"reactjs-popup\";\r\n\r\ninterface Props {\r\n  node: IFamilyExtNode;\r\n  isRoot: boolean;\r\n  onSubClick: (id: string) => void;\r\n  style?: React.CSSProperties;\r\n  namePerson: string;\r\n}\r\nfunction Iflink(link){\r\nif (link){\r\n    return(\r\n<div>\r\nhello\r\n<a href={link}>See more</a>\r\n</div>\r\n\r\n)\r\n}\r\n}\r\n\r\nexport default React.memo<Props>(\r\n\r\n  function FamilyNode({ node, isRoot, onSubClick, style, namePerson }) {\r\n    return (\r\n      <div className={styles.root} style={style}>\r\n        <Popup trigger={\r\n          <button\r\n          className={classNames(\r\n            styles.inner,\r\n            styles[node.gender],\r\n            isRoot && styles.isRoot,\r\n          )}\r\n        >\r\n        <p className={styles.person}>\r\n        {namePerson}\r\n        </p>\r\n        </button>} position=\"right top\" contentStyle = {{width:\"300px\", height:\"300px\",background: \"#f2eecb\", padding: \"0px\", border: \"none\", position:\"relative\" }}\r\n        on=\"hover\"\r\ncloseOnDocumentClick\r\nmouseLeaveDelay={300}\r\nmouseEnterDelay={300}\r\narrow={false}\r\n>\r\n\r\n            {close => (\r\n              <div>\r\n              <div className = {styles.popupTop}>\r\n                {node.name}\r\n                <a className=\"close\" onClick={close}>\r\n                  &times;\r\n                </a>\r\n              </div>\r\n                  <div className = {styles.popupContent}>\r\n                  DOB: {node.dob}\r\n                  DOD: {node.dod}\r\n                  {Iflink(node.link)}\r\n                  </div>\r\n\r\n                <img src={node.src} />\r\n\r\n\r\n              </div>\r\n            )}\r\n\r\n          </Popup>\r\n        {node.hasSubTree && (\r\n          <div\r\n            className={classNames(styles.sub, styles[node.gender])}\r\n            onClick={() => onSubClick(node.id)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}