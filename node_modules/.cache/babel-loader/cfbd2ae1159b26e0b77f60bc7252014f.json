{"ast":null,"code":"import { withId, withType, inAscOrder } from '../utils';\nexport default (families => {\n  const connectors = [];\n  families.filter(withType('root')).forEach(family => {\n    family.pUnits.forEach(pUnit => {\n      const pX = family.left + pUnit.shift + 1;\n      const pY = family.top + 1;\n\n      if (pUnit.size === 2) {\n        connectors.push({\n          points: [pX, pY, pX + 2, pY]\n        });\n      } else if (pUnit.size === 1 && pUnit.nodes[0].spouses.length) {\n        families.filter(rFamily => rFamily.id !== family.id).forEach(rFamily => {\n          rFamily.pUnits.forEach(unit => {\n            if (unit.nodes.findIndex(withId(pUnit.nodes[0].spouses[0].id)) !== -1) {\n              const xX = [pX, rFamily.left + unit.shift + 1].sort(inAscOrder);\n              connectors.push({\n                points: [xX[0], pY, xX[1], pY]\n              });\n            }\n          });\n        });\n      }\n    });\n  });\n  return connectors;\n});","map":{"version":3,"sources":["../../src/connectors/middle.ts"],"names":[],"mappings":"AACA,SAAS,MAAT,EAAiB,QAAjB,EAA2B,UAA3B,QAA6C,UAA7C;AAGA,gBAAgB,QAAD,IAAqC;AAClD,QAAM,UAAU,GAAiB,EAAjC;AAEA,EAAA,QAAQ,CAAC,MAAT,CAAgB,QAAQ,CAAC,MAAD,CAAxB,EAAkC,OAAlC,CAA0C,MAAM,IAAG;AAEjD,IAAA,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,KAAK,IAAG;AAC5B,YAAM,EAAE,GAAG,MAAM,CAAC,IAAP,GAAc,KAAK,CAAC,KAApB,GAA4B,CAAvC;AACA,YAAM,EAAE,GAAG,MAAM,CAAC,GAAP,GAAa,CAAxB;;AAEA,UAAI,KAAK,CAAC,IAAN,KAAe,CAAnB,EAAsB;AACpB,QAAA,UAAU,CAAC,IAAX,CAAgB;AACd,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAE,GAAG,CAAd,EAAiB,EAAjB;AADM,SAAhB;AAGD,OAJD,MAIO,IAAI,KAAK,CAAC,IAAN,KAAe,CAAf,IAAoB,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,OAAf,CAAuB,MAA/C,EAAuD;AAE5D,QAAA,QAAQ,CACL,MADH,CACU,OAAO,IAAI,OAAO,CAAC,EAAR,KAAe,MAAM,CAAC,EAD3C,EAEG,OAFH,CAEW,OAAO,IAAG;AACjB,UAAA,OAAO,CAAC,MAAR,CAAe,OAAf,CAAuB,IAAI,IAAG;AAC5B,gBAAI,IAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,MAAM,CAAC,KAAK,CAAC,KAAN,CAAY,CAAZ,EAAe,OAAf,CAAuB,CAAvB,EAA0B,EAA3B,CAA3B,MAA+D,CAAC,CAApE,EAAuE;AACrE,oBAAM,EAAE,GAAG,CAAC,EAAD,EAAK,OAAO,CAAC,IAAR,GAAe,IAAI,CAAC,KAApB,GAA4B,CAAjC,EAAoC,IAApC,CAAyC,UAAzC,CAAX;AACA,cAAA,UAAU,CAAC,IAAX,CAAgB;AACd,gBAAA,MAAM,EAAE,CAAC,EAAE,CAAC,CAAD,CAAH,EAAQ,EAAR,EAAY,EAAE,CAAC,CAAD,CAAd,EAAmB,EAAnB;AADM,eAAhB;AAGD;AACF,WAPD;AAQD,SAXH;AAYD;AACF,KAvBD;AAwBD,GA1BD;AA4BA,SAAO,UAAP;AACD,CAhCD","sourceRoot":"","sourcesContent":["import { withId, withType, inAscOrder } from '../utils';\nexport default (families) => {\n    const connectors = [];\n    families.filter(withType('root')).forEach(family => {\n        family.pUnits.forEach(pUnit => {\n            const pX = family.left + pUnit.shift + 1;\n            const pY = family.top + 1;\n            if (pUnit.size === 2) {\n                connectors.push({\n                    points: [pX, pY, pX + 2, pY],\n                });\n            }\n            else if (pUnit.size === 1 && pUnit.nodes[0].spouses.length) {\n                families\n                    .filter(rFamily => rFamily.id !== family.id)\n                    .forEach(rFamily => {\n                    rFamily.pUnits.forEach(unit => {\n                        if (unit.nodes.findIndex(withId(pUnit.nodes[0].spouses[0].id)) !== -1) {\n                            const xX = [pX, rFamily.left + unit.shift + 1].sort(inAscOrder);\n                            connectors.push({\n                                points: [xX[0], pY, xX[1], pY],\n                            });\n                        }\n                    });\n                });\n            }\n        });\n    });\n    return connectors;\n};\n//# sourceMappingURL=middle.js.map"]},"metadata":{},"sourceType":"module"}