{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport byChildren from './byChildren';\nimport arrange from './arrange';\nimport { prop, withType } from '../utils';\nexport default (function (store) {\n  var createFamily = byChildren(store);\n  var arrangeFamily = arrange(store);\n  var root = store.familiesArray.filter(withType('root'));\n\n  var _iterator = _createForOfIteratorHelper(root),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var rootFamily = _step.value;\n      if (!rootFamily.main) continue;\n      var stack = rootFamily.pUnitsWithParents.reverse();\n\n      while (stack.length) {\n        var familyUnit = stack.pop();\n        var family = createFamily(familyUnit.nodes.map(prop('id')));\n        var childFamily = store.getFamily(familyUnit.familyId);\n        family.cID = childFamily.id;\n        family.top = childFamily.top - 2;\n        family.left = childFamily.left + familyUnit.shift;\n        arrangeFamily(family);\n        store.families.set(family.id, family);\n        var nextUnits = family.pUnitsWithParents;\n        if (nextUnits.length) stack = [].concat(_toConsumableArray(stack), _toConsumableArray(nextUnits.reverse()));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return store;\n});","map":{"version":3,"sources":["../../src/parents/create.ts"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,cAAvB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,SAAS,IAAT,EAAe,QAAf,QAA+B,UAA/B;AAIA,gBAAe,UAAC,KAAD,EAAwB;AACrC,MAAM,YAAY,GAAG,UAAU,CAAC,KAAD,CAA/B;AACA,MAAM,aAAa,GAAG,OAAO,CAAC,KAAD,CAA7B;AACA,MAAM,IAAI,GAAG,KAAK,CAAC,aAAN,CAAoB,MAApB,CAA2B,QAAQ,CAAC,MAAD,CAAnC,CAAb;;AAHqC,6CAKZ,IALY;AAAA;;AAAA;AAKrC,wDAA+B;AAAA,UAApB,UAAoB;AAC7B,UAAI,CAAC,UAAU,CAAC,IAAhB,EAAsB;AACtB,UAAI,KAAK,GAAG,UAAU,CAAC,iBAAX,CAA6B,OAA7B,EAAZ;;AAEA,aAAO,KAAK,CAAC,MAAb,EAAqB;AACnB,YAAM,UAAU,GAAS,KAAK,CAAC,GAAN,EAAzB;AAEA,YAAM,MAAM,GAAG,YAAY,CAAC,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAqB,IAAI,CAAC,IAAD,CAAzB,CAAD,CAA3B;AACA,YAAM,WAAW,GAAG,KAAK,CAAC,SAAN,CAAgB,UAAU,CAAC,QAA3B,CAApB;AAEA,QAAA,MAAM,CAAC,GAAP,GAAa,WAAW,CAAC,EAAzB;AACA,QAAA,MAAM,CAAC,GAAP,GAAa,WAAW,CAAC,GAAZ,GAAkB,CAA/B;AACA,QAAA,MAAM,CAAC,IAAP,GAAc,WAAW,CAAC,IAAZ,GAAmB,UAAU,CAAC,KAA5C;AAEA,QAAA,aAAa,CAAC,MAAD,CAAb;AACA,QAAA,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,MAAM,CAAC,EAA1B,EAA8B,MAA9B;AAEA,YAAM,SAAS,GAAG,MAAM,CAAC,iBAAzB;AACA,YAAI,SAAS,CAAC,MAAd,EAAsB,KAAK,gCAAO,KAAP,sBAAiB,SAAS,CAAC,OAAV,EAAjB,EAAL;AACvB;AACF;AAzBoC;AAAA;AAAA;AAAA;AAAA;;AA2BrC,SAAO,KAAP;AACD,CA5BD","sourceRoot":"","sourcesContent":["import byChildren from './byChildren';\nimport arrange from './arrange';\nimport { prop, withType } from '../utils';\nexport default (store) => {\n    const createFamily = byChildren(store);\n    const arrangeFamily = arrange(store);\n    const root = store.familiesArray.filter(withType('root'));\n    for (const rootFamily of root) {\n        if (!rootFamily.main)\n            continue;\n        let stack = rootFamily.pUnitsWithParents.reverse();\n        while (stack.length) {\n            const familyUnit = stack.pop();\n            const family = createFamily(familyUnit.nodes.map(prop('id')));\n            const childFamily = store.getFamily(familyUnit.familyId);\n            family.cID = childFamily.id;\n            family.top = childFamily.top - 2;\n            family.left = childFamily.left + familyUnit.shift;\n            arrangeFamily(family);\n            store.families.set(family.id, family);\n            const nextUnits = family.pUnitsWithParents;\n            if (nextUnits.length)\n                stack = [...stack, ...nextUnits.reverse()];\n        }\n    }\n    return store;\n};\n//# sourceMappingURL=create.js.map"]},"metadata":{},"sourceType":"module"}