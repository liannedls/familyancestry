{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\src\\\\frontend\\\\FamilyNode\\\\FamilyNode.tsx\";\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport styles from './FamilyNode.module.css';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction Iflink(link) {\n  if (link) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"hello\", /*#__PURE__*/React.createElement(\"a\", {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"See more\"));\n  }\n}\n\nexport default React.memo(function FamilyNode({\n  node,\n  isRoot,\n  onSubClick,\n  style,\n  namePerson\n}) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classNames(styles.inner, styles[node.gender], isRoot && styles.isRoot),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, namePerson)), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, node.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.popupContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"DOB: \", node.dob, \"DOD: \", node.dod, Iflink(node.link)), /*#__PURE__*/React.createElement(\"img\", {\n    src: node.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), node.hasSubTree && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.sub, styles[node.gender]),\n    onClick: () => onSubClick(node.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/src/frontend/FamilyNode/FamilyNode.tsx"],"names":["React","useState","classNames","styles","Modal","Iflink","link","memo","FamilyNode","node","isRoot","onSubClick","style","namePerson","show","setShow","handleClose","handleShow","root","inner","gender","person","popupTop","name","popupContent","dob","dod","src","hasSubTree","sub","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;;AAUA,SAASC,MAAT,CAAgBC,IAAhB,EAAqB;AACnB,MAAIA,IAAJ,EAAS;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAG,MAAA,IAAI,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CADF;AAMH;AACF;;AAED,eAAeN,KAAK,CAACO,IAAN,CAEb,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,KAA5B;AAAmCC,EAAAA;AAAnC,CAApB,EAAqE;AACnE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMe,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACe,IAAvB;AAA6B,IAAA,KAAK,EAAEN,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AACA,IAAA,SAAS,EAAEV,UAAU,CACnBC,MAAM,CAACgB,KADY,EAEnBhB,MAAM,CAACM,IAAI,CAACW,MAAN,CAFa,EAGnBV,MAAM,IAAIP,MAAM,CAACO,MAHE,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOF;AAAG,IAAA,SAAS,EAAEP,MAAM,CAACkB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCR,UADD,CAPE,CADN,eAcS,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEC,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAK,IAAA,SAAS,EAAIb,MAAM,CAACmB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,IAAI,CAACc,IADR,CADC,eAKG;AAAK,IAAA,SAAS,EAAIpB,MAAM,CAACqB,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACMf,IAAI,CAACgB,GADX,WAEMhB,IAAI,CAACiB,GAFX,EAGCrB,MAAM,CAACI,IAAI,CAACH,IAAN,CAHP,CALH,eAWC;AAAK,IAAA,GAAG,EAAEG,IAAI,CAACkB,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,CAdT,EA8BGlB,IAAI,CAACmB,UAAL,iBACC;AACE,IAAA,SAAS,EAAE1B,UAAU,CAACC,MAAM,CAAC0B,GAAR,EAAa1B,MAAM,CAACM,IAAI,CAACW,MAAN,CAAnB,CADvB;AAEE,IAAA,OAAO,EAAE,MAAMT,UAAU,CAACF,IAAI,CAACqB,EAAN,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADF;AAuCD,CA9CY,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport classNames from 'classnames';\r\nimport { IFamilyExtNode } from 'relatives-tree';\r\nimport styles from './FamilyNode.module.css';\r\nimport Popup from \"reactjs-popup\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\ninterface Props {\r\n  node: IFamilyExtNode;\r\n  isRoot: boolean;\r\n  onSubClick: (id: string) => void;\r\n  style?: React.CSSProperties;\r\n  namePerson: string;\r\n}\r\n\r\nfunction Iflink(link){\r\n  if (link){\r\n      return(\r\n        <div>\r\n        hello\r\n        <a href={link}>See more</a>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default React.memo<Props>(\r\n\r\n  function FamilyNode({ node, isRoot, onSubClick, style, namePerson }) {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <div className={styles.root} style={style}>\r\n            <button\r\n            className={classNames(\r\n              styles.inner,\r\n              styles[node.gender],\r\n              isRoot && styles.isRoot,\r\n            )}\r\n          >\r\n          <p className={styles.person}>\r\n          {namePerson}\r\n          </p>\r\n          </button>\r\n\r\n\r\n               <Modal show={show} onHide={handleClose}>\r\n              <div className = {styles.popupTop}>\r\n                {node.name}\r\n\r\n              </div>\r\n                  <div className = {styles.popupContent}>\r\n                  DOB: {node.dob}\r\n                  DOD: {node.dod}\r\n                  {Iflink(node.link)}\r\n                  </div>\r\n\r\n                <img src={node.src} />\r\n\r\n\r\n              </Modal>\r\n\r\n        {node.hasSubTree && (\r\n          <div\r\n            className={classNames(styles.sub, styles[node.gender])}\r\n            onClick={() => onSubClick(node.id)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}