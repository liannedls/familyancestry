{"ast":null,"code":"import { prop, withType, flat, unique } from '../utils';\nexport default (families => {\n  const connectors = [];\n  families.filter(withType('parent')).forEach(family => {\n    family.pUnits.forEach(pUnit => {\n      const pX = family.left + pUnit.shift + pUnit.size;\n      const pY = family.top + 1;\n      const mY = family.top + 2;\n\n      if (pUnit.size === 2) {\n        connectors.push({\n          points: [pX - 1, pY, pX - 1 + 2, pY]\n        });\n      }\n\n      connectors.push({\n        points: [pX, pY, pX, mY]\n      });\n      const ids = pUnit.nodes.map(prop('children')).reduce(flat).map(prop('id')).filter(unique);\n      family.cUnits.forEach(cUnit => {\n        const cIndex = cUnit.nodes.findIndex(node => ids.indexOf(node.id) !== -1);\n        const cX = family.left + cUnit.shift + cIndex * 2 + 1;\n        connectors.push({\n          points: [cX, mY, cX, mY + 1]\n        });\n\n        if (pX !== cX) {\n          connectors.push({\n            points: [Math.min(pX, cX), mY, Math.max(pX, cX), mY]\n          });\n        }\n      });\n    });\n  });\n  return connectors;\n});","map":{"version":3,"sources":["../../src/connectors/parents.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,QAAf,EAAyB,IAAzB,EAA+B,MAA/B,QAA6C,UAA7C;AAIA,gBAAgB,QAAD,IAAqC;AAClD,QAAM,UAAU,GAAiB,EAAjC;AAEA,EAAA,QAAQ,CAAC,MAAT,CAAgB,QAAQ,CAAC,QAAD,CAAxB,EAAoC,OAApC,CAA4C,MAAM,IAAG;AACnD,IAAA,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,KAAK,IAAG;AAC5B,YAAM,EAAE,GAAG,MAAM,CAAC,IAAP,GAAc,KAAK,CAAC,KAApB,GAA6B,KAAK,CAAC,IAA9C;AACA,YAAM,EAAE,GAAG,MAAM,CAAC,GAAP,GAAa,CAAxB;AACA,YAAM,EAAE,GAAG,MAAM,CAAC,GAAP,GAAa,CAAxB;;AAGA,UAAI,KAAK,CAAC,IAAN,KAAe,CAAnB,EAAsB;AACpB,QAAA,UAAU,CAAC,IAAX,CAAgB;AACd,UAAA,MAAM,EAAE,CAAC,EAAE,GAAG,CAAN,EAAS,EAAT,EAAa,EAAE,GAAG,CAAL,GAAS,CAAtB,EAAyB,EAAzB;AADM,SAAhB;AAGD;;AAGD,MAAA,UAAU,CAAC,IAAX,CAAgB;AACd,QAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AADM,OAAhB;AAIA,YAAM,GAAG,GAAG,KAAK,CAAC,KAAN,CACT,GADS,CACL,IAAI,CAAC,UAAD,CADC,EAET,MAFS,CAEF,IAFE,EAGT,GAHS,CAGL,IAAI,CAAC,IAAD,CAHC,EAIT,MAJS,CAIF,MAJE,CAAZ;AAMA,MAAA,MAAM,CAAC,MAAP,CAAc,OAAd,CAAsB,KAAK,IAAG;AAC5B,cAAM,MAAM,GAAG,KAAK,CAAC,KAAN,CAAY,SAAZ,CAAsB,IAAI,IAAI,GAAG,CAAC,OAAJ,CAAY,IAAI,CAAC,EAAjB,MAAyB,CAAC,CAAxD,CAAf;AACA,cAAM,EAAE,GAAG,MAAM,CAAC,IAAP,GAAc,KAAK,CAAC,KAApB,GAA6B,MAAM,GAAG,CAAtC,GAA2C,CAAtD;AAGA,QAAA,UAAU,CAAC,IAAX,CAAgB;AACd,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAE,GAAG,CAAlB;AADM,SAAhB;;AAIA,YAAI,EAAE,KAAK,EAAX,EAAe;AAEb,UAAA,UAAU,CAAC,IAAX,CAAgB;AACd,YAAA,MAAM,EAAE,CAAC,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,EAAb,CAAD,EAAmB,EAAnB,EAAuB,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,EAAb,CAAvB,EAAyC,EAAzC;AADM,WAAhB;AAGD;AACF,OAfD;AAgBD,KAvCD;AAwCD,GAzCD;AA2CA,SAAO,UAAP;AACD,CA/CD","sourceRoot":"","sourcesContent":["import { prop, withType, flat, unique } from '../utils';\nexport default (families) => {\n    const connectors = [];\n    families.filter(withType('parent')).forEach(family => {\n        family.pUnits.forEach(pUnit => {\n            const pX = family.left + pUnit.shift + (pUnit.size);\n            const pY = family.top + 1;\n            const mY = family.top + 2;\n            if (pUnit.size === 2) {\n                connectors.push({\n                    points: [pX - 1, pY, pX - 1 + 2, pY],\n                });\n            }\n            connectors.push({\n                points: [pX, pY, pX, mY],\n            });\n            const ids = pUnit.nodes\n                .map(prop('children'))\n                .reduce(flat)\n                .map(prop('id'))\n                .filter(unique);\n            family.cUnits.forEach(cUnit => {\n                const cIndex = cUnit.nodes.findIndex(node => ids.indexOf(node.id) !== -1);\n                const cX = family.left + cUnit.shift + (cIndex * 2) + 1;\n                connectors.push({\n                    points: [cX, mY, cX, mY + 1],\n                });\n                if (pX !== cX) {\n                    connectors.push({\n                        points: [Math.min(pX, cX), mY, Math.max(pX, cX), mY],\n                    });\n                }\n            });\n        });\n    });\n    return connectors;\n};\n//# sourceMappingURL=parents.js.map"]},"metadata":{},"sourceType":"module"}