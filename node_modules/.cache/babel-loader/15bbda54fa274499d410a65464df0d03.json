{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\lianne\\\\mygit\\\\familyancestry\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import PinchZoomPan from'pinch-zoom-pan';import ReactFamilyTree from'react-family-tree';import FamilyNode from'./FamilyNode/FamilyNode';import styles from'./Tree.module.css';import nodes from'../familytree.json';var myID='UIEjvLJMd';var WIDTH=120;var HEIGHT=130;export default React.memo(function Tree(){var _useState=useState(myID),_useState2=_slicedToArray(_useState,2),rootId=_useState2[0],setRootId=_useState2[1];var onResetClick=useCallback(function(){return setRootId(myID);},[]);return/*#__PURE__*/React.createElement(\"div\",{className:styles.root,id:\"tree\"},/*#__PURE__*/React.createElement(\"header\",{className:styles.header},/*#__PURE__*/React.createElement(\"h1\",{className:styles.title},\"FamilyTree demo\"),/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/SanichKotikov/react-family-tree-example\"},\"GitHub\")),/*#__PURE__*/React.createElement(PinchZoomPan,{captureWheel:true,min:0.5,max:2.5,className:styles.wrapper},/*#__PURE__*/React.createElement(ReactFamilyTree,{nodes:nodes,rootId:rootId,width:WIDTH,height:HEIGHT,canvasClassName:styles.tree,renderNode:function renderNode(node){return/*#__PURE__*/React.createElement(FamilyNode,{key:node.id,namePerson:node.name,node:node,isRoot:node.id===rootId,onSubClick:setRootId,style:{width:WIDTH,height:HEIGHT,transform:\"translate(\".concat(node.left*(WIDTH/2),\"px, \").concat(node.top*(HEIGHT/2),\"px)\")}});}})),rootId!==myID&&/*#__PURE__*/React.createElement(\"div\",{className:styles.reset,onClick:onResetClick},\"Reset\"));});","map":{"version":3,"sources":["C:/Users/lianne/mygit/familyancestry/src/frontend/Tree.tsx"],"names":["React","useState","useCallback","PinchZoomPan","ReactFamilyTree","FamilyNode","styles","nodes","myID","WIDTH","HEIGHT","memo","Tree","rootId","setRootId","onResetClick","root","header","title","wrapper","tree","node","id","name","width","height","transform","left","top","reset"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,GAAMC,CAAAA,IAAI,CAAG,WAAb,CAEA,GAAMC,CAAAA,KAAK,CAAG,GAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,GAAf,CAEA,cAAeV,CAAAA,KAAK,CAACW,IAAN,CACb,QAASC,CAAAA,IAAT,EAAgB,eACcX,QAAQ,CAASO,IAAT,CADtB,wCACPK,MADO,eACCC,SADD,eAEd,GAAMC,CAAAA,YAAY,CAAGb,WAAW,CAAC,iBAAMY,CAAAA,SAAS,CAACN,IAAD,CAAf,EAAD,CAAwB,EAAxB,CAAhC,CAEA,mBACE,2BAAK,SAAS,CAAEF,MAAM,CAACU,IAAvB,CAA6B,EAAE,CAAC,MAAhC,eACE,8BAAQ,SAAS,CAAEV,MAAM,CAACW,MAA1B,eACE,0BAAI,SAAS,CAAEX,MAAM,CAACY,KAAtB,oBADF,cAKE,yBAAG,IAAI,CAAC,4DAAR,WALF,CADF,cAQE,oBAAC,YAAD,EACE,YAAY,KADd,CAEE,GAAG,CAAE,GAFP,CAGE,GAAG,CAAE,GAHP,CAIE,SAAS,CAAEZ,MAAM,CAACa,OAJpB,eAME,oBAAC,eAAD,EACE,KAAK,CAAEZ,KADT,CAEE,MAAM,CAAEM,MAFV,CAGE,KAAK,CAAEJ,KAHT,CAIE,MAAM,CAAEC,MAJV,CAKE,eAAe,CAAEJ,MAAM,CAACc,IAL1B,CAME,UAAU,CAAE,oBAACC,IAAD,qBACV,oBAAC,UAAD,EACE,GAAG,CAAEA,IAAI,CAACC,EADZ,CAEE,UAAU,CAAED,IAAI,CAACE,IAFnB,CAGE,IAAI,CAAEF,IAHR,CAIE,MAAM,CAAEA,IAAI,CAACC,EAAL,GAAYT,MAJtB,CAKE,UAAU,CAAEC,SALd,CAME,KAAK,CAAE,CACLU,KAAK,CAAEf,KADF,CAELgB,MAAM,CAAEf,MAFH,CAGLgB,SAAS,qBAAeL,IAAI,CAACM,IAAL,EAAalB,KAAK,CAAG,CAArB,CAAf,gBAA6CY,IAAI,CAACO,GAAL,EAAYlB,MAAM,CAAG,CAArB,CAA7C,OAHJ,CANT,EADU,EANd,EANF,CARF,CAoCGG,MAAM,GAAKL,IAAX,eACC,2BAAK,SAAS,CAAEF,MAAM,CAACuB,KAAvB,CAA8B,OAAO,CAAEd,YAAvC,UArCJ,CADF,CA4CD,CAjDY,CAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport PinchZoomPan from 'pinch-zoom-pan';\r\nimport { IFamilyNode, IFamilyExtNode } from 'relatives-tree';\r\nimport ReactFamilyTree from 'react-family-tree';\r\nimport FamilyNode from './FamilyNode/FamilyNode';\r\nimport styles from './Tree.module.css';\r\nimport nodes from '../familytree.json';\r\nconst myID = 'UIEjvLJMd';\r\n\r\nconst WIDTH = 120;\r\nconst HEIGHT = 130;\r\n\r\nexport default React.memo<{}>(\r\n  function Tree() {\r\n    const [rootId, setRootId] = useState<string>(myID);\r\n    const onResetClick = useCallback(() => setRootId(myID), []);\r\n\r\n    return (\r\n      <div className={styles.root} id=\"tree\">\r\n        <header className={styles.header}>\r\n          <h1 className={styles.title}>\r\n            FamilyTree demo\r\n          </h1>\r\n\r\n          <a href=\"https://github.com/SanichKotikov/react-family-tree-example\">GitHub</a>\r\n        </header>\r\n        <PinchZoomPan\r\n          captureWheel\r\n          min={0.5}\r\n          max={2.5}\r\n          className={styles.wrapper}\r\n        >\r\n          <ReactFamilyTree\r\n            nodes={nodes as IFamilyNode[]}\r\n            rootId={rootId}\r\n            width={WIDTH}\r\n            height={HEIGHT}\r\n            canvasClassName={styles.tree}\r\n            renderNode={(node: IFamilyExtNode) => (\r\n              <FamilyNode\r\n                key={node.id}\r\n                namePerson={node.name}\r\n                node={node}\r\n                isRoot={node.id === rootId}\r\n                onSubClick={setRootId}\r\n                style={{\r\n                  width: WIDTH,\r\n                  height: HEIGHT,\r\n                  transform: `translate(${node.left * (WIDTH / 2)}px, ${node.top * (HEIGHT / 2)}px)`,\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </PinchZoomPan>\r\n        {rootId !== myID && (\r\n          <div className={styles.reset} onClick={onResetClick}>\r\n            Reset\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}