{"ast":null,"code":"import hasHiddenRelatives from './hasHiddenRelatives';\nimport { flat } from './index';\nconst PARENTS = ['root', 'parent'];\nconst CHILDREN = ['root', 'child'];\n\nconst extendNode = family => unit => unit.nodes.map((node, idx) => Object.assign({}, node, {\n  top: family.top + (unit.isChild ? 2 : 0),\n  left: family.left + unit.shift + idx * 2,\n  hasSubTree: hasHiddenRelatives(family, node)\n}));\n\nconst getParentNodes = family => (~PARENTS.indexOf(family.type) ? family.pUnits : []).map(extendNode(family));\n\nconst getChildNodes = family => (~CHILDREN.indexOf(family.type) ? family.cUnits : []).map(extendNode(family));\n\nconst mapFamily = family => [...getParentNodes(family), ...getChildNodes(family)].reduce(flat);\n\nexport default (families => families.map(mapFamily).reduce(flat));","map":null,"metadata":{},"sourceType":"module"}