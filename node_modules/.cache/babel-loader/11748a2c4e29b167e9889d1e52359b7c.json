{"ast":null,"code":"const prop = name => item => item[name];\n\nconst withId = id => item => item.id === id;\n\nconst withType = (...types) => item => types.includes(item.type);\n\nconst withSameIDs = target => unit => target.ids.join('') === unit.ids.join('');\n\nconst flat = (items, item) => items.concat(item);\n\nconst unique = (item, index, arr) => arr.indexOf(item) === index;\n\nconst inAscOrder = (v1, v2) => v1 - v2;\n\nconst pipe = (...fus) => init => fus.reduce((res, fn) => fn(res), init);\n\nconst relToNode = store => rel => store.getNode(rel.id);\n\nconst min = arr => Math.min.apply(null, arr);\n\nconst max = arr => Math.max.apply(null, arr);\n\nconst hasDiffParents = node => node.parents.map(prop('type')).filter(unique).length > 1;\n\nexport { prop, withId, withType, withSameIDs, flat, unique, inAscOrder, pipe, relToNode, min, max, hasDiffParents };","map":null,"metadata":{},"sourceType":"module"}