{"ast":null,"code":"const prop = name => item => item[name];\n\nconst withId = id => item => item.id === id;\n\nconst withType = (...types) => item => types.includes(item.type);\n\nconst withSameIDs = target => unit => target.ids.join('') === unit.ids.join('');\n\nconst flat = (items, item) => items.concat(item);\n\nconst unique = (item, index, arr) => arr.indexOf(item) === index;\n\nconst inAscOrder = (v1, v2) => v1 - v2;\n\nconst pipe = (...fus) => init => fus.reduce((res, fn) => fn(res), init);\n\nconst relToNode = store => rel => store.getNode(rel.id);\n\nconst min = arr => Math.min.apply(null, arr);\n\nconst max = arr => Math.max.apply(null, arr);\n\nconst hasDiffParents = node => node.parents.map(prop('type')).filter(unique).length > 1;\n\nexport { prop, withId, withType, withSameIDs, flat, unique, inAscOrder, pipe, relToNode, min, max, hasDiffParents };","map":{"version":3,"sources":["../../src/utils/index.ts"],"names":[],"mappings":"AAIA,MAAM,IAAI,GAA0B,IAAvB,IAAoC,IAAD,IAAmB,IAAI,CAAC,IAAD,CAAvE;;AACA,MAAM,MAAM,GAA0D,EAAvD,IAAqE,IAAD,IAAa,IAAI,CAAC,EAAL,KAAY,EAA5G;;AACA,MAAM,QAAQ,GAAG,CAA8B,GAAG,KAAjC,KAAsD,IAAD,IAAa,KAAK,CAAC,QAAN,CAAe,IAAI,CAAC,IAApB,CAAnF;;AACA,MAAM,WAAW,GAAI,MAAD,IAAmB,IAAD,IAAgB,MAAM,CAAC,GAAP,CAAW,IAAX,CAAgB,EAAhB,MAAwB,IAAI,CAAC,GAAL,CAAS,IAAT,CAAc,EAAd,CAA9E;;AACA,MAAM,IAAI,GAAG,CAAI,KAAJ,EAAgB,IAAhB,KAA8B,KAAK,CAAC,MAAN,CAAa,IAAb,CAA3C;;AACA,MAAM,MAAM,GAAG,CAAI,IAAJ,EAAa,KAAb,EAA4B,GAA5B,KAAkD,GAAG,CAAC,OAAJ,CAAY,IAAZ,MAAsB,KAAvF;;AACA,MAAM,UAAU,GAAG,CAAC,EAAD,EAAa,EAAb,KAA4B,EAAE,GAAG,EAApD;;AACA,MAAM,IAAI,GAAG,CAAC,GAAG,GAAJ,KAA4B,IAAJ,IAAgB,GAAG,CAAC,MAAJ,CAAW,CAAC,GAAD,EAAM,EAAN,KAAa,EAAE,CAAC,GAAD,CAA1B,EAAiC,IAAjC,CAArD;;AACA,MAAM,SAAS,GAAI,KAAD,IAAmB,GAAD,IAAoB,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,EAAlB,CAAxD;;AACA,MAAM,GAAG,GAAI,GAAD,IAA2B,IAAI,CAAC,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,GAArB,CAAvC;;AACA,MAAM,GAAG,GAAI,GAAD,IAA2B,IAAI,CAAC,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,GAArB,CAAvC;;AAEA,MAAM,cAAc,GAAI,IAAD,IACrB,IAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,IAAI,CAAC,MAAD,CAArB,EAA+B,MAA/B,CAAsC,MAAtC,EAA8C,MAA9C,GAAuD,CADzD;;AAGA,SACE,IADF,EAEE,MAFF,EAGE,QAHF,EAIE,WAJF,EAKE,IALF,EAME,MANF,EAOE,UAPF,EAQE,IARF,EASE,SATF,EAUE,GAVF,EAWE,GAXF,EAYE,cAZF","sourceRoot":"","sourcesContent":["const prop = (name) => (item) => item[name];\nconst withId = (id) => (item) => item.id === id;\nconst withType = (...types) => (item) => types.includes(item.type);\nconst withSameIDs = (target) => (unit) => target.ids.join('') === unit.ids.join('');\nconst flat = (items, item) => items.concat(item);\nconst unique = (item, index, arr) => arr.indexOf(item) === index;\nconst inAscOrder = (v1, v2) => v1 - v2;\nconst pipe = (...fus) => (init) => fus.reduce((res, fn) => fn(res), init);\nconst relToNode = (store) => (rel) => store.getNode(rel.id);\nconst min = (arr) => Math.min.apply(null, arr);\nconst max = (arr) => Math.max.apply(null, arr);\nconst hasDiffParents = (node) => node.parents.map(prop('type')).filter(unique).length > 1;\nexport { prop, withId, withType, withSameIDs, flat, unique, inAscOrder, pipe, relToNode, min, max, hasDiffParents, };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}